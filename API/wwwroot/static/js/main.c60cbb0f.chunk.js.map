{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"2YAOaA,EAAb,aAII,WAAYC,EAAUC,GAAqB,yBAH3CD,WAG0C,OAF1CC,cAE0C,EACtCC,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,K,+BCRjB,SAASE,EAAeC,GAC3B,MAAO,KAAOA,EAAS,KAAKC,QAAQ,GCIxC,IAKaC,EAAmBC,YAC5B,0BAD4C,iDAE5C,WAAOC,EAAGC,GAAV,oGAEqBC,GAAMC,OAAOC,MAFlC,iGAIeH,EAASI,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,wDAF4C,wDAS5C,CACIC,UAAW,WACP,ID1BL,SAAmBC,GACtB,IAAMC,EAAIC,SAASC,OAAOC,MAAM,YAAcJ,EAAM,oBACpD,OAAOC,EAAIA,EAAEI,MAAQ,GCwBRC,CAAU,WAAY,OAAO,KAKjCC,EAAqBjB,YAC9B,4BAD8C,iDAE9C,aAAoCE,GAApC,4FAASgB,EAAT,EAASA,UAAT,IAAoBC,gBAApB,MAA+B,EAA/B,oBAEqBhB,GAAMC,OAAOgB,QAAQF,EAAWC,GAFrD,iGAIejB,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QAJvD,yDAF8C,yDAWrCa,EAAwBrB,YAE7B,+BAF6C,iDAG7C,aAAgCE,GAAhC,0FAASgB,EAAT,EAASA,UAAWC,EAApB,EAAoBA,SAApB,kBAEchB,GAAMC,OAAOkB,WAAWJ,EAAWC,GAFjD,+EAIejB,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QAJvD,wDAH6C,yDAYxCe,EAAcC,YAAY,CACnCC,KAAM,SACNC,aA9C8B,CAC9BC,OAAQ,KACRC,OAAQ,QA6CRC,SAAU,CACNC,UAAW,SAACC,EAAOC,GACfD,EAAMJ,OAASK,EAAOC,SAE1BC,YAAa,SAACH,GACVA,EAAMJ,OAAS,OAGvBQ,cAAgB,SAAAC,GACZA,EAAQC,QAAQpB,EAAmBqB,SAAS,SAACP,EAAOC,GAChDD,EAAMH,OAAS,iBAAmBI,EAAOO,KAAKC,IAAItB,aAEtDkB,EAAQC,QAAQhB,EAAsBiB,SAAS,SAACP,EAAOC,GACnDD,EAAMH,OAAS,oBAAsBI,EAAOO,KAAKC,IAAItB,UAAYc,EAAOO,KAAKC,IAAIf,QAErFW,EAAQC,QAAQhB,EAAsBoB,WAAW,SAACV,EAAOC,GAAY,IAAD,IAChE,EAAgCA,EAAOO,KAAKC,IAApCtB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACbuB,EAAS,UAAGX,EAAMJ,cAAT,aAAG,EAAclC,MAAMkD,WAAU,SAAAC,GAAC,OAAIA,EAAE1B,YAAcA,MAClD,IAAfwB,QAAkCG,IAAdH,IACxBX,EAAMJ,OAAQlC,MAAMiD,GAAWvB,UAAYA,EACK,KAA5C,UAAAY,EAAMJ,cAAN,eAAclC,MAAMiD,GAAWvB,WAC/BY,EAAMJ,OAAOlC,MAAMqD,OAAOJ,EAAW,GACzCX,EAAMH,OAAS,WAEnBQ,EAAQC,QAAQhB,EAAsB0B,UAAU,SAAChB,EAAOC,GACpDgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,UAEnBQ,EAAQc,WAAWC,YAAQlC,EAAmBwB,UAAW1C,EAAiB0C,YAAY,SAACV,EAAOC,GAC1FD,EAAMJ,OAASK,EAAOC,QACtBF,EAAMH,OAAS,UAEnBQ,EAAQc,WAAWC,YAAQlC,EAAmB8B,SAAUhD,EAAiBgD,WAAW,SAAChB,EAAOC,GACxFgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,aAKpB,EAAmCL,EAAY6B,QAAvCtB,EAAR,EAAQA,UAAWI,EAAnB,EAAmBA,Y,0BChFbmB,EAAarD,YACtB,qBADsC,iDAEtC,WAAOQ,EAAMN,GAAb,8GAE8BC,GAAMmD,QAAQC,MAAM/C,GAFlD,cAEcgD,EAFd,OAGgB7B,EAAoB6B,EAApB7B,OAAW8B,EAH3B,YAGoCD,EAHpC,GAIY7B,GAAQzB,EAASwD,SAAS5B,EAAUH,IACxCgC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,IALpD,kBAMeA,GANf,2DAQevD,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QARvD,0DAFsC,yDAe7BuD,EAAmB/D,YAC5B,2BAD4C,iDAE5C,WAAOC,EAAGC,GAAV,4FACIA,EAASwD,SAASM,EAAQH,KAAKI,MAAMN,aAAaO,QAAQ,WAD9D,kBAG8B/D,GAAMmD,QAAQa,cAH5C,cAGcX,EAHd,OAIgB7B,EAAoB6B,EAApB7B,OAAW8B,EAJ3B,YAIoCD,EAJpC,GAKY7B,GAAQzB,EAASwD,SAAS5B,EAAUH,IACxCgC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,IANpD,kBAOeA,GAPf,2DASevD,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QATvD,0DAF4C,wDAc5C,CACIC,UAAW,WACP,IAAKkD,aAAaO,QAAQ,QAAS,OAAO,KAKzCE,EAAe5C,YAAY,CACpCC,KAAM,UACNC,aA1C+B,CAC/B+B,KAAM,MA0CN5B,SAAU,CACNwC,QAAS,SAACtC,GACNA,EAAM0B,KAAO,KACbE,aAAarC,WAAW,QACxBgD,GAAQC,KAAK,MAEjBP,QAAS,SAACjC,EAAOC,GACb,IACIwC,EADSX,KAAKI,MAAMQ,KAAKzC,EAAOC,QAAQyC,MAAMC,MAAM,KAAK,KAC1C,gEACnB5C,EAAM0B,KAAN,2BAAkBzB,EAAOC,SAAzB,IAAkCuC,MAA0B,kBAAXA,EAAsB,CAACA,GAASA,MAGzFrC,cAAgB,SAAAC,GACZA,EAAQC,QAAQ0B,EAAiBhB,UAAU,SAAChB,GACxCA,EAAM0B,KAAO,KACbE,aAAarC,WAAW,QACxBsD,IAAMrE,MAAM,wCACZ+D,GAAQC,KAAK,QAEjBnC,EAAQc,WAAWC,YAAQE,EAAWZ,UAAWsB,EAAiBtB,YAAY,SAACV,EAAOC,GAClF,IACIwC,EADSX,KAAKI,MAAMQ,KAAKzC,EAAOC,QAAQyC,MAAMC,MAAM,KAAK,KAC1C,gEACnB5C,EAAM0B,KAAN,2BAAkBzB,EAAOC,SAAzB,IAAkCuC,MAA0B,kBAAXA,EAAsB,CAACA,GAASA,OAErFpC,EAAQc,WAAWC,YAAQE,EAAWN,WAAW,SAAChB,EAAOC,GACrD,MAAMA,EAAOC,cAKlB,EAA6BmC,EAAahB,QAAlCiB,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,QCrElBa,EAAkBC,cAExB,SAASC,EAAeC,GACpB,IAAMC,EAAS,IAAIC,gBAOnB,OANAD,EAAOE,OAAO,aAAcH,EAAcI,WAAWC,YACrDJ,EAAOE,OAAO,WAAYH,EAAcM,SAASD,YACjDJ,EAAOE,OAAO,UAAWH,EAAcO,SACnCP,EAAcQ,YAAYP,EAAOE,OAAO,aAAcH,EAAcQ,YACpER,EAAcS,OAAOC,OAAS,GAAGT,EAAOE,OAAO,SAAUH,EAAcS,OAAOJ,YAC9EL,EAAcW,MAAMD,OAAS,GAAGT,EAAOE,OAAO,QAASH,EAAcW,MAAMN,YACxEJ,EAGJ,IAAMW,EAAqB5F,YAC9B,6BAD8C,iDAE9C,WAAOC,EAAGC,GAAV,0FACU+E,EAASF,EAAe7E,EAAS2F,WAAWC,QAAQd,eAD9D,kBAG+B7E,GAAM4F,QAAQC,KAAKf,GAHlD,cAGcgB,EAHd,OAIQ/F,EAASwD,SAASwC,GAAYD,EAASvG,WAJ/C,kBAKeuG,EAASxG,OALxB,yDAOeS,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QAPvD,yDAF8C,yDAcrC2F,EAAoBnG,YAC7B,4BAD6C,iDAE7C,WAAOkB,EAAWhB,GAAlB,oGAEqBC,GAAM4F,QAAQK,QAAQlF,GAF3C,iGAIehB,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QAJvD,wDAF6C,yDAWpC6F,EAAerG,YACxB,uBADwC,iDAExC,WAAOC,EAAGC,GAAV,6GAEeC,GAAM4F,QAAQM,gBAF7B,yDAIenG,EAASI,gBAAgB,CAAEC,MAAO,KAAMC,QAJvD,wDAFwC,yDAqBrC,IAAM8F,GAAe9E,YAAY,CACpCC,KAAM,UACNC,aAAcmD,EAAgB0B,gBAA8B,CACxDC,gBAAgB,EAChBC,eAAe,EACf7E,OAAQ,OACR6D,OAAQ,GACRE,MAAO,GACPX,cAjBG,CACHI,WAAY,EACZE,SAAU,EACVC,QAAS,OACTE,OAAQ,GACRE,MAAO,IAaPjG,SAAU,OAEdmC,SAAU,CACN6E,iBAAkB,SAAC3E,EAAOC,GACtBD,EAAMyE,gBAAiB,EACvBzE,EAAMiD,cAAN,uCAA2BjD,EAAMiD,eAAkBhD,EAAOC,SAA1D,IAAmEmD,WAAY,KAEnFuB,cAAe,SAAC5E,EAAOC,GACnBD,EAAMyE,gBAAiB,EACvBzE,EAAMiD,cAAN,2BAA2BjD,EAAMiD,eAAkBhD,EAAOC,UAE9DiE,YAAa,SAACnE,EAAOC,GACjBD,EAAMrC,SAAWsC,EAAOC,SAE5B2E,mBAAoB,SAAA7E,GAChBA,EAAMiD,cAjCP,CACHI,WAAY,EACZE,SAAU,EACVC,QAAS,OACTE,OAAQ,GACRE,MAAO,KA8BPkB,WAAY,SAAC9E,EAAOC,GAChB6C,EAAgBiC,UAAU/E,EAAOC,EAAOC,SACxCF,EAAMyE,gBAAiB,GAE3BO,cAAe,SAAChF,EAAOC,GACnB6C,EAAgBmC,UAAUjF,EAAOC,EAAOC,SACxCF,EAAMyE,gBAAiB,IAG/BrE,cAAgB,SAAAC,GACZA,EAAQC,QAAQuD,EAAmBtD,SAAS,SAAAP,GACxCA,EAAMH,OAAS,0BAEnBQ,EAAQC,QAAQuD,EAAmBnD,WAAW,SAACV,EAAOC,GAClD6C,EAAgBoC,OAAOlF,EAAOC,EAAOC,SACrCF,EAAMH,OAAS,OACfG,EAAMyE,gBAAiB,KAE3BpE,EAAQC,QAAQuD,EAAmB7C,UAAU,SAAChB,EAAOC,GACjDgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQ8D,EAAkB7D,SAAS,SAAAP,GACvCA,EAAMH,OAAS,yBAEnBQ,EAAQC,QAAQ8D,EAAkB1D,WAAW,SAACV,EAAOC,GACjD6C,EAAgBiC,UAAU/E,EAAOC,EAAOC,SACxCF,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQ8D,EAAkBpD,UAAU,SAAChB,EAAOC,GAChDgB,QAAQC,IAAIjB,GACZD,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQgE,EAAa/D,SAAS,SAAAP,GAClCA,EAAMH,OAAS,yBAEnBQ,EAAQC,QAAQgE,EAAa5D,WAAW,SAACV,EAAOC,GAC5CD,EAAM0D,OAASzD,EAAOC,QAAQwD,OAC9B1D,EAAM4D,MAAQ3D,EAAOC,QAAQ0D,MAC7B5D,EAAM0E,eAAgB,EACtB1E,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQgE,EAAatD,UAAU,SAAChB,EAAOC,GAC3CgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,aAKdsF,GAAmBrC,EAAgBsC,cAAa,SAACpF,GAAD,OAAsBA,EAAM+D,WAElF,GAAwGQ,GAAalD,QAA7GsD,GAAR,GAAQA,iBAAsCR,IAA9C,GAA0BU,mBAA1B,GAA8CV,aAAaS,GAA3D,GAA2DA,cAAeE,GAA1E,GAA0EA,WAAYE,GAAtF,GAAsFA,cC5IhFK,GAAe5F,YAAY,CACpCC,KAAM,UACNC,aAP+B,CAC/BlB,KAAM,GACN6G,MAAO,uDAMPxF,SAAU,CACNyF,UAAW,SAACvF,EAAOC,GACfD,EAAMvB,MAAQwB,EAAOC,SAEzBsF,UAAW,SAACxF,EAAOC,GACfD,EAAMvB,MAAQwB,EAAOC,YAK1B,GAAiCmF,GAAahE,QAAtCkE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,UCdbC,GAAQC,YAAe,CAChCC,QAAS,CACLC,QAASP,GAAaM,QACtB/F,OAAQJ,EAAYmG,QACpB5B,QAASQ,GAAaoB,QACtBE,QAASxD,EAAasD,WAOjBG,GAAiB,kBAAMC,eACvBC,GAAkDC,IChB/DC,IAAMC,SAASC,QAAUC,QACzBH,IAAMC,SAASG,iBAAkB,EAEjC,IAAMC,GAAe,SAACrC,GAAD,OAA6BA,EAASzF,MAE3DyH,IAAMM,aAAaC,QAAQC,KAAI,SAACC,GAAiB,IAAD,EACtChE,EAAK,UAAG8C,GAAM3B,WAAW+B,QAAQnE,YAA5B,aAAG,EAA+BiB,MAE7C,OADIA,IAAOgE,EAAOC,QAAQC,cAAf,iBAAyClE,IAC7CgE,KAGXT,IAAMM,aAAatC,SAASwC,IAA5B,iDAAgC,WAAMxC,GAAN,8GAEtB4C,EAAa5C,EAAS0C,QAAT,cAEf1C,EAASzF,KAAO,IAAIhB,EAAkByG,EAASzF,KAAMqD,KAAKI,MAAM4E,KAJxC,kBAOrB5C,GAPqB,2CAAhC,uDAQG,SAAC1F,GACA,MAA8BA,EAAM0F,SAA5BzF,EAAR,EAAQA,KACR,OADA,EAAcoB,QAEV,KAAK,IACD,GAAIpB,EAAKsI,OAAQ,CACb,IAAMC,EAA6B,GACnC,IAAK,IAAMrI,KAAOF,EAAKsI,OACftI,EAAKsI,OAAOpI,IACZqI,EAAiBxE,KAAK/D,EAAKsI,OAAOpI,IAG1C,MAAMqI,EAAiBC,OAE3BpE,IAAMrE,MAAMC,EAAK6G,OACjB,MACJ,KAAK,IACDzC,IAAMrE,MAAMC,EAAK6G,OACjB,MACJ,KAAK,IACDzC,IAAMrE,MAAM,mCACZ,MACJ,KAAK,IACD+D,GAAQC,KAAK,CACT0E,SAAU,gBACVlH,MAAO,CAAExB,MAAOC,KAM5B,OAAO0I,QAAQC,OAAO5I,EAAM0F,aAGhC,IAAMmD,GACG,SAACC,EAAapE,GAAd,OAA2CgD,IAAM5H,IAAIgJ,EAAK,CAAEpE,WAAUqE,KAAKhB,KAD9Ec,GAEI,SAACC,EAAaE,GAAd,OAA2BtB,IAAMuB,KAAKH,EAAKE,GAAMD,KAAKhB,KAF1Dc,GAIM,SAACC,GAAD,OAAiBpB,IAAMwB,OAAOJ,GAAKC,KAAKhB,KAJ9Cc,GAKQ,SAACC,EAAa7I,GAAd,OAAiCyH,IAAMuB,KAAKH,EAAK7I,EAAM,CAC7DmI,QAAS,CAAE,eAAgB,yBAC5BW,KAAKhB,KAPNc,GAQO,SAACC,EAAa7I,GAAd,OAAiCyH,IAAMyB,IAAIL,EAAK7I,EAAM,CAC3DmI,QAAS,CAAE,eAAgB,yBAC5BW,KAAKhB,KAGZ,SAASqB,GAAeC,GACpB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAMpJ,KAAOkJ,EACdC,EAAS1E,OAAOzE,EAAKkJ,EAAKlJ,IAE9B,OAAOmJ,EAGX,IAoBMzJ,GAAS,CACXC,IAAK,kBAAM+I,GAAa,WACxBhI,QAAS,SAACF,GAAD,IAAoBC,EAApB,uDAA+B,EAA/B,OAAqCiI,GAAA,2BAAkClI,EAAlC,qBAAwDC,GAAY,KAClHG,WAAY,SAACJ,GAAD,IAAoBC,EAApB,uDAA+B,EAA/B,OAAqCiI,GAAA,2BAAoClI,EAApC,qBAA0DC,MA8BhGhB,GAVD,CACV4F,QAtCY,CACZC,KAAM,SAACf,GAAD,OAA8BmE,GAAa,WAAYnE,IAC7DmB,QAAS,SAAC2D,GAAD,OAAgBX,GAAA,mBAAyBW,KAClD1D,aAAc,kBAAM+C,GAAa,sBAoCjCY,WAjCe,CACfC,YAAa,kBAAMb,GAAa,sBAChCc,YAAa,kBAAMd,GAAa,uBAChCe,YAAa,kBAAMf,GAAa,oBAChCgB,YAAa,kBAAMhB,GAAa,uBAChCiB,mBAAoB,kBAAMjB,GAAa,4BA6BvChJ,UACAkD,QArBY,CACZC,MAAO,SAAC+G,GAAD,OAAiBlB,GAAc,gBAAiBkB,IACvDC,SAAU,SAACD,GAAD,OAAiBlB,GAAc,mBAAoBkB,IAC7DnG,YAAa,kBAAMiF,GAAa,wBAChCoB,aAAc,kBAAMpB,GAAa,0BAkBjCqB,OAfW,CACXzE,KAAM,kBAAMoD,GAAa,WACzBsB,MAAO,SAACX,GAAD,OAAgBX,GAAA,iBAAuBW,KAC9CY,OAAQ,SAACL,GAAD,OAAiBlB,GAAc,SAAUkB,KAajDM,SAVa,CACbC,oBAAqB,kBAAMzB,GAAc,WAAY,MAUrD0B,MAlDU,CACVC,cAAe,SAACC,GAAD,OAAkB5B,GAAkB,WAAYO,GAAeqB,KAC9EC,cAAe,SAACD,GAAD,OAAkB5B,GAAiB,WAAYO,GAAeqB,KAC7EE,cAAe,SAACnB,GAAD,OAAgBX,GAAA,mBAA4BW,O,QChFhD,SAASoB,KACpB,MAAgDC,mBAAmB,IAAnE,mBAAOC,EAAP,KAAyBC,EAAzB,KAQA,OACI,gBAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAjC,yCACA,gBAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,eAACC,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWC,cAAc8B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWE,cAAc6B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWG,cAAc4B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWI,cAAc2B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAdxC,WACI3L,GAAM6J,WAAWK,qBACZf,MAAK,kBAAMtG,QAAQC,IAAI,0BACvB8I,OAAM,SAAAxL,GAAK,OAAI+K,EAAoB/K,OAWhC,sCAGA8K,EAAiB3F,OAAS,GAC1B,gBAACsG,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACI,eAACC,EAAA,EAAD,gCACA,eAACC,EAAA,EAAD,UAEQd,EAAiBe,KAAI,SAAA7L,GAAK,OACtB,eAAC8L,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,UAAe/L,KADJA,c,0ECpBhC,SAASgM,GAAT,GAA2D,IAAlC7M,EAAiC,EAAjCA,SAAU8M,EAAuB,EAAvBA,aACtCC,EAAkD/M,EAAlD+M,YAAaC,EAAqChN,EAArCgN,WAAYC,EAAyBjN,EAAzBiN,WAAYrH,EAAa5F,EAAb4F,SAC7C,EAAoC8F,mBAASqB,GAA7C,mBAAOrH,EAAP,KAAmBuB,EAAnB,KAOA,OACI,gBAACiG,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAA9D,UACI,gBAACvB,EAAA,EAAD,0BACiBiB,EAAc,GAAKnH,EAAW,EAD/C,IAEKmH,EAAcnH,EAAWoH,EACpBA,EACAD,EAAcnH,EAJxB,OAIsCoH,EAJtC,YAMA,eAACM,GAAA,EAAD,CACIC,MAAM,YACNC,KAAK,QACLC,MAAOR,EACPS,KAAMhI,EACNiI,SAAU,SAACC,EAAGF,GAAJ,OAlBtB,SAA0BA,GACtBzG,EAAcyG,GACdZ,EAAaY,GAgBkBG,CAAiBH,S,iCCvBzC,SAASI,GAAT,GAA+D,IAApC/N,EAAmC,EAAnCA,MAAOgO,EAA4B,EAA5BA,QAASJ,EAAmB,EAAnBA,SACtD,EAAwCjC,mBAASqC,GAAW,IAA5D,mBAAOC,EAAP,KAAqBC,EAArB,KAWA,OACI,eAACC,GAAA,EAAD,UAEQnO,EAAM2M,KAAI,SAAAxC,GAAI,OACV,eAACiE,GAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,CACIN,SAAyC,IAAhCC,EAAaM,QAAQpE,GAC9BkC,QAAS,kBAjBrC,SAAuBmC,GACnB,IACIC,EAAuB,GACFA,GAAH,IAFDR,EAAa/K,WAAU,SAAAiH,GAAI,OAAIA,IAASqE,KAE1B,uBAAOP,GAAP,CAAqBO,IACtCP,EAAaS,QAAO,SAAAvE,GAAI,OAAIA,IAASqE,KACvDN,EAAgBO,GAChBb,EAASa,GAW8BE,CAAcxE,MAGrCyE,MAAOzE,GACFA,Q,cCzBd,SAAS0E,GAAT,GAAwE,IAA5CC,EAA2C,EAA3CA,QAASlB,EAAkC,EAAlCA,SAAUmB,EAAwB,EAAxBA,cAC1D,OACI,eAACC,GAAA,EAAD,CAAaC,UAAU,WAAvB,SACI,eAACC,GAAA,EAAD,CAAYtB,SAAUA,EAAUY,MAAOO,EAAvC,SAEQD,EAAQnC,KAAI,gBAAG6B,EAAH,EAAGA,MAAOI,EAAV,EAAUA,MAAV,OACR,eAACR,GAAA,EAAD,CAAkBI,MAAOA,EAAOH,QAAS,eAACc,GAAA,EAAD,IAAWP,MAAOA,GAAYJ,UCVhF,SAASY,KACpB,IAAMC,EAAW/G,GAAeb,GAAiB6H,WACjD,EAAmEhH,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAzFU,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,cAAehB,EAAvC,EAAuCA,OAAQE,EAA/C,EAA+CA,MAAOjG,EAAtD,EAAsDA,SAChDgE,EAAWmE,KAUjB,OARAmH,qBAAU,WACDxI,GAAgB9C,EAASkC,OAC/B,CAACY,EAAgB9C,IAEpBsL,qBAAU,WACDvI,GAAe/C,EAAS2C,OAC9B,CAAC3C,EAAU+C,IAEP,CACHqI,WACAtI,iBACAC,gBACAhB,SACAE,QACAjG,Y,wBChBO,SAASuP,GAAT,GAA4D,IAAD,IAAhCC,eAAgC,MAAtB,aAAsB,EACtE,OACI,eAACC,GAAA,EAAD,CAAUC,MAAM,EAAMC,WAAW,EAAjC,SACI,gBAACzC,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASuC,OAAO,QAAvE,UACI,eAACC,GAAA,EAAD,CAAkBrC,KAAM,IAAKD,MAAM,cACnC,eAACzB,EAAA,EAAD,CAAYE,QAAQ,KAAK8D,GAAI,CAAC1C,eAAgB,SAAU2C,SAAU,QAASC,IAAK,OAAhF,SACKR,S,mFCDN,SAASS,GAAT,GAA0C,IAAnB3E,EAAkB,EAAlBA,QAC1BpJ,EAAWmG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCC,OACF8B,EAAWmE,KAEjB,OACI,gBAAC+H,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CACIC,OACI,eAACC,GAAA,EAAD,CAAQP,GAAI,CAAEQ,QAAS,kBAAvB,SACKhF,EAAQvJ,KAAKwO,OAAO,GAAGC,gBAGhC7I,MAAO2D,EAAQvJ,KACf0O,qBAAsB,CAClBX,GAAI,CAAEY,WAAY,OAAQnD,MAAO,mBAGzC,eAACoD,GAAA,EAAD,CACIb,GAAI,CAAEF,OAAQ,IAAKgB,eAAgB,UAAWN,QAAS,iBACvDO,MAAOvF,EAAQwF,WACfnJ,MAAO2D,EAAQvJ,OAEnB,gBAACgP,GAAA,EAAD,WACI,eAACjF,EAAA,EAAD,CAAYC,cAAY,EAACwB,MAAM,YAAYvB,QAAQ,KAAnD,SACK9L,EAAeoL,EAAQ0F,SAE5B,gBAAClF,EAAA,EAAD,CAAYE,QAAQ,QAAQuB,MAAM,iBAAlC,UACKjC,EAAQ2F,MADb,MACuB3F,EAAQ4F,WAGnC,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CACIC,QAASnP,EAAOoP,SAAS,iBAAmBhG,EAAQjB,IACpD+B,QAAS,kBAAMpI,EAASzC,EAAmB,CAAEC,UAAW8J,EAAQjB,OAChEmD,KAAK,QAHT,yBAOA,eAACrB,EAAA,EAAD,CAAQ6C,UAAWuC,KAAMC,GAAE,mBAAclG,EAAQjB,IAAMmD,KAAK,QAA5D,wB,cChDD,SAASiE,KACpB,OACI,gBAACC,GAAA,EAAD,CAAMxH,MAAI,EAACyH,IAAE,EAAC3C,UAAWkB,KAAzB,UACI,eAACC,GAAA,EAAD,CACIC,OACI,eAACwB,GAAA,EAAD,CAAUC,UAAU,OAAO7F,QAAQ,WAAW8F,MAAO,GAAIlC,OAAQ,KAErEjI,MACI,eAACiK,GAAA,EAAD,CACIC,UAAU,OACVjC,OAAQ,GACRkC,MAAM,MACNC,MAAO,CAAEC,aAAc,OAInC,eAACJ,GAAA,EAAD,CAAU9B,GAAI,CAAEF,OAAQ,KAAOiC,UAAU,OAAO7F,QAAQ,gBACxD,eAAC+E,GAAA,EAAD,UACI,uCACI,eAACa,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAImC,MAAO,CAAEC,aAAc,KAC9D,eAACJ,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,aAGrD,eAACX,GAAA,EAAD,UACI,uCACI,eAACS,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,QAC7C,eAACF,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,gBClBlD,SAASG,GAAT,GAA2C,IAApB7C,EAAmB,EAAnBA,SAC1BtI,EAAmBuB,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAjDU,eACR,OACI,eAAC4K,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,SACK/C,EAAS1C,KAAI,SAAApB,GAAO,OACjB,eAACoG,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SAES7K,EAGG,eAACmJ,GAAD,CAAa3E,QAASA,IAFtB,eAACmG,GAAD,KAHWnG,EAAQjB,S,wBCVhC,SAAS+H,KACpB,IAAQ9M,EAAkB+C,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAhDd,cACR,EAAoCoG,mBAASpG,EAAcQ,YAA3D,mBAAOA,EAAP,KAAmBuM,EAAnB,KACMrO,EAAWmE,KAEXmK,EAAkBC,cAAS,SAACC,GAC9BxO,EAASgD,GAAiB,CAAElB,WAAY0M,EAAMC,OAAOlE,WACtD,KAEH,OACI,eAACmE,GAAA,EAAD,CACI/D,MAAM,kBACN3C,QAAQ,WACRE,WAAS,EACTqC,MAAOzI,GAAc,GACrB6H,SAAU,SAAC6E,GACPH,EAAcG,EAAMC,OAAOlE,OAC3B+D,EAAgBE,MCXhC,IAAMG,GAAc,CAChB,CAAEpE,MAAO,OAAQI,MAAO,gBACxB,CAAEJ,MAAO,YAAaI,MAAO,uBAC7B,CAAEJ,MAAO,QAASI,MAAO,wBAGd,SAAStI,KACpB,MAA6D8I,KAArDC,EAAR,EAAQA,SAAUrJ,EAAlB,EAAkBA,OAAQE,EAA1B,EAA0BA,MAAOc,EAAjC,EAAiCA,cAAe/G,EAAhD,EAAgDA,SACxCsF,EAAkB+C,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAhDd,cACFtB,EAAWmE,KAEjB,OAAKpB,EAGD,gBAAC2K,GAAA,EAAD,CAAMQ,WAAS,EAACU,cAAe,EAA/B,UACI,gBAAClB,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAACkB,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,GAAjB,SACI,eAACV,GAAD,MAEJ,eAACS,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAAChE,GAAA,EAAD,UACI,eAACE,GAAA,EAAD,UACI,eAACL,GAAD,CACIE,cAAexJ,EAAcO,QAC7BgJ,QAAS8D,GACThF,SAAU,SAAAC,GAAC,OAAI5J,EAASgD,GAAiB,CAAEnB,QAAS+H,EAAE6E,OAAOlE,kBAK7E,eAACsE,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAAC7E,GAAA,EAAD,UACI,eAACJ,GAAD,CACI/N,MAAOgG,EACPgI,QAASzI,EAAcS,OACvB4H,SAAU,SAAC5N,GAAD,OAAqBiE,EAASgD,GAAiB,CAAEjB,OAAQhG,YAI/E,eAAC8S,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAAC7E,GAAA,EAAD,UACI,eAACJ,GAAD,CACI/N,MAAOkG,EACP8H,QAASzI,EAAcW,MACvB0H,SAAU,SAAC5N,GAAD,OAAqBiE,EAASgD,GAAiB,CAAEf,MAAOlG,eAKlF,eAAC2R,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACM,GAAD,CAAa7C,SAAUA,MAE3B,eAACsC,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAG7B,GAAI,CAAEgD,GAAI,GAA5B,SAEQ9S,GACA,eAAC6M,GAAD,CACI7M,SAAUA,EACV8M,aAAc,SAACY,GAAD,OAAkB1J,EAASiD,GAAc,CAAEvB,WAAYgI,aA/C9D,eAAC6B,GAAD,CAAkBC,QAAQ,wB,gECnB1C,SAASwD,KACpB,OACI,gBAACnH,EAAA,EAAD,CAAWmD,UAAW6D,KAAO/C,GAAI,CAACF,OAAQ,KAA1C,UACI,eAAC9D,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAjC,+DACA,eAACiH,GAAA,EAAD,IACA,eAAC9G,EAAA,EAAD,CAAQD,WAAS,EAAC8C,UAAWuC,KAAMC,GAAG,WAAtC,gCCEG,SAAS0B,KACpB,MAA2B7K,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAjDA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OACV8B,EAAWmE,KACTkC,EAAO8I,cAAP9I,GACFiB,EAAUjD,IAAe,SAAAhG,GAAK,OAAImF,GAAiB4L,WAAW/Q,EAAOgI,MAC3DgJ,EAAkBhL,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAxDlE,OACR,EAAgCwJ,mBAAS,GAAzC,mBAAOjK,EAAP,KAAiB6R,EAAjB,KACMpJ,EAAI,OAAGjI,QAAH,IAAGA,OAAH,EAAGA,EAAQlC,MAAMwT,MAAK,SAAArQ,GAAC,OAAIA,EAAE1B,aAAF,OAAgB8J,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASjB,OAuB9D,OArBAiF,qBAAU,WACFpF,GAAMoJ,EAAYpJ,EAAKzI,UACtB6J,GAAStH,EAASyC,EAAkB+M,SAASnJ,OACnD,CAACA,EAAIH,EAAMlG,EAAUsH,IAkBpB+H,EAAc/B,SAAS,WAAmB,eAAC/B,GAAD,CAAkBC,QAAQ,uBAEnElE,EAGD,gBAACoG,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,sBAAK8B,IAAKnI,EAAQwF,WAAY4C,IAAKpI,EAAQvJ,KAAMgQ,MAAO,CAAED,MAAO,YAErE,gBAACJ,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAAC7F,EAAA,EAAD,CAAYE,QAAQ,KAApB,SAA0BV,EAAQvJ,OAClC,eAACkR,GAAA,EAAD,CAASnD,GAAI,CAAEgD,GAAI,KACnB,gBAAChH,EAAA,EAAD,CAAYE,QAAQ,KAAKuB,MAAM,YAA/B,eAA8CjC,EAAQ0F,MAAQ,KAAK5Q,QAAQ,MAC3E,eAACuT,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQvJ,UAExB,gBAAC+R,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,0BACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ0I,iBAExB,gBAACF,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ4F,UAExB,gBAAC4C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ2F,WAExB,gBAAC6C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,gCACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ2I,4BAKpC,gBAACvC,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACe,GAAA,EAAD,CACI/E,SA1DxB,SAA2B6E,GACnBA,EAAMC,OAAOlE,OAAS,GACtB+E,EAAYE,SAAShB,EAAMC,OAAOlE,SAyDlBvC,QAAQ,WACRkF,KAAK,SACLvC,MAAM,mBACNzC,WAAS,EACTqC,MAAO9M,MAGf,eAACiQ,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACP,GAAA,EAAD,CACI8C,UAAc,OAAJhK,QAAI,IAAJA,OAAA,EAAAA,EAAMzI,YAAaA,IAAcyI,GAAqB,IAAbzI,EACnD4P,QAASnP,EAAOoP,SAAS,WACzBlF,QAhExB,WACI,IAAKlC,GAAQzI,EAAWyI,EAAKzI,SAAU,CACnC,IAAM0S,EAAkBjK,EAAOzI,EAAWyI,EAAKzI,SAAWA,EAC1DuC,EAASzC,EAAmB,CAAEC,UAAS,OAAE8J,QAAF,IAAEA,OAAF,EAAEA,EAASjB,GAAK5I,SAAU0S,SAC9D,CACH,IAAMA,EAAkBjK,EAAKzI,SAAWA,EACxCuC,EAASrC,EAAsB,CAAEH,UAAS,OAAE8J,QAAF,IAAEA,OAAF,EAAEA,EAASjB,GAAK5I,SAAU0S,OA2DpDrE,GAAI,CAAEF,OAAQ,QACdrC,MAAM,UACNC,KAAK,QACLxB,QAAQ,YACRE,WAAS,EARb,SAUKhC,EAAO,kBAAoB,2BA3D/B,eAAC8I,GAAD,ICtCV,SAASoB,KACpB,IAAMpQ,EAAWmE,KACjB,EAAwBE,IAAe,SAAAhG,GAAK,OAAIA,EAAM4F,WAA9CnH,EAAR,EAAQA,KAAM6G,EAAd,EAAcA,MAEd,OACI,uCACI,eAACmE,EAAA,EAAD,CAAYE,QAAQ,KAApB,SACKrE,IAEL,gBAACmE,EAAA,EAAD,CAAYE,QAAQ,KAApB,2BACmBlL,KAEnB,gBAACmL,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS6D,GAAU,KAAKmE,QAAQ,YAAYuB,MAAM,QAAzE,uBACA,eAACpB,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS4D,GAAU,KAAKoE,QAAQ,YAAYuB,MAAM,UAAzE,uBACA,eAACpB,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS4D,GAAU,KAAKoE,QAAQ,YAAYuB,MAAM,YAAzE,kC,yBCfD,SAAS8G,KASpB,OACI,uCACI,gBAAC,KAAD,2BAVS,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IAKZ,cACI,+BACI,sBAAKjB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAE5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,SAEjG,+BACI,sBAAKlB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAE5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,SAEjG,+BACI,sBAAKlB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAE5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,aAIrG,eAACzH,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAS0C,GAAI,CAAEiD,EAAG,GAArD,SACI,eAACjH,EAAA,EAAD,CAAYE,QAAQ,KAApB,uC,wGCrBD,SAAS4I,KACpB,IAAM5Q,EAAWmE,KACTpE,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KAER,EAAgC2H,mBAAS,MAAzC,mBAAOmJ,EAAP,KAAiBC,EAAjB,KACMpF,EAAOqF,QAAQF,GAIfG,EAAc,WAChBF,EAAY,OAGhB,OACI,uCACI,eAAC3I,EAAA,EAAD,CACIoB,MAAM,UACNnB,QAXQ,SAACoG,GACjBsC,EAAYtC,EAAMyC,gBAWVnF,GAAI,CAAEoF,WAAY,MAHtB,gBAKKnR,QALL,IAKKA,OALL,EAKKA,EAAMoR,QAEX,gBAACC,GAAA,EAAD,CACIP,SAAUA,EACVnF,KAAMA,EACN2F,QAASL,EACTM,oBAAqBC,KAJzB,UAMI,eAACC,GAAA,EAAD,CAAUpJ,QAAS4I,EAAnB,qBACA,eAACQ,GAAA,EAAD,CAAUxG,UAAWuC,KAAMC,GAAG,UAA9B,uBACA,eAACgE,GAAA,EAAD,CACIpJ,QACI,WACIpI,EAASW,KACTX,EAASxB,MAJrB,0BC1BhB,IAAMiT,GAAW,CACb,CAAE9N,MAAO,UAAW+N,KAAM,YAC1B,CAAE/N,MAAO,QAAS+N,KAAM,UACxB,CAAE/N,MAAO,UAAW+N,KAAM,aAGxBC,GAAa,CACf,CAAEhO,MAAO,QAAS+N,KAAM,UACxB,CAAE/N,MAAO,WAAY+N,KAAM,cAGzBE,GAAY,CACdrI,MAAO,UACPsI,eAAgB,OAChBX,WAAY,KACZ,UAAW,CACP3H,MAAO,YAEX,WAAY,CACRA,MAAO,mBAIA,SAASuI,GAAT,GAAyD,IAAD,EAAtCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,kBAC/B/T,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OACA8B,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KAEFkS,EAAS,OAAGhU,QAAH,IAAGA,OAAH,EAAGA,EAAQlC,MAAMmW,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAKzI,WAAU,GAE3E,OACI,eAAC2U,GAAA,EAAD,CAAQrG,SAAS,SAAjB,SACI,gBAACsG,GAAA,EAAD,CAASvG,GAAI,CAAE3C,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAA7E,UACI,gBAAC,KAAD,CAAKF,QAAQ,OAAOE,WAAW,SAA/B,UACI,eAACvB,EAAA,EAAD,CAAYE,QAAQ,KAAKgD,UAAWsH,KAASC,OAAK,EAAC/E,GAAG,IAClD1B,GAAI8F,GADR,sBAIA,eAACY,GAAA,EAAD,CAAQzI,QAASgI,EAAUpI,SAAUqI,OAEzC,gBAACvJ,EAAA,EAAD,CAAMqD,GAAI,CAAE3C,QAAS,QAArB,UAEQsI,GAAS/I,KAAI,gBAAG/E,EAAH,EAAGA,MAAO+N,EAAV,EAAUA,KAAV,OACT,eAAC/I,EAAA,EAAD,CACIqC,UAAWsH,KACX9E,GAAIkE,EAEJ5F,GAAI8F,GAJR,SAMKjO,EAAM6I,eAHFkF,MAQb3R,IAAI,UAAIA,EAAKe,aAAT,aAAI,EAAYwM,SAAS,WAC7B,eAAC3E,EAAA,EAAD,CACIqC,UAAWsH,KACX9E,GAAI,aACJ1B,GAAI8F,GAHR,0BASR,gBAAC,KAAD,CAAKzI,QAAQ,OAAOE,WAAW,SAA/B,UACI,eAACoJ,GAAA,EAAD,CAAYzH,UAAWuC,KAAMC,GAAG,UAAUhE,KAAK,QAAQsC,GAAI,CAAEvC,MAAO,WAApE,SACI,eAACmJ,GAAA,EAAD,CAAOC,aAAcV,EAAW1I,MAAM,YAAtC,SACI,eAACqJ,GAAA,EAAD,QAIJ7S,EACI,eAAC6Q,GAAD,IAEA,eAACnI,EAAA,EAAD,CAAMqD,GAAI,CAAE3C,QAAS,QAArB,SACKwI,GAAWjJ,KAAI,gBAAG/E,EAAH,EAAGA,MAAO+N,EAAV,EAAUA,KAAV,OACZ,eAAC/I,EAAA,EAAD,CACIqC,UAAWsH,KACX9E,GAAIkE,EAEJ5F,GAAI8F,GAJR,SAMKjO,EAAM6I,eAHFkF,gB,OCtF9B,SAASmB,KACpB,IAAMjS,EAAUkS,cACRzU,EAAU0U,cAAV1U,MAER,OACI,gBAACwJ,EAAA,EAAD,CAAWmD,UAAW6D,KAAtB,UACU,OAALxQ,QAAK,IAALA,KAAOxB,MACJ,uCACI,eAACiL,EAAA,EAAD,CAAYE,QAAQ,KAAKuB,MAAM,QAAQxB,cAAY,EAAnD,SAAqD1J,EAAMxB,MAAM8G,QACjE,eAACsL,GAAA,EAAD,IACA,eAACnH,EAAA,EAAD,UAAazJ,EAAMxB,MAAMmW,QAAU,6BAGvC,eAAClL,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,0BAEJ,eAACI,EAAA,EAAD,CAAQC,QAAS,kBAAMxH,EAAQC,KAAK,aAApC,qCCVG,SAASoS,GAAT,GAA6C,IAAD,IAAnBC,EAAmB,EAAnBA,SAC5BjV,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,YAESkB,IAAb+T,IAAwBA,EAAQ,iBAAGjV,QAAH,IAAGA,OAAH,EAAGA,EAAQlC,MAAMmW,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAOjM,EAAKzI,SAAWyI,EAAK8G,QAAQ,UAA3E,QAAiF,GACrH,IAAMmG,EAAcD,EAAW,KAAX,UAA8C,KAAnB,OAANjV,QAAM,IAANA,OAAA,EAAAA,EAAQlC,MAAMiG,eAAnC,SAAwD,EAAI,IAEhF,OACI,qCACI,eAAC2N,GAAA,EAAD,CAAgB3E,UAAW6D,KAAO7G,QAAS,WAA3C,SACI,eAAC4H,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWqD,QAAS,EAApB,sBACA,eAACrD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BnX,EAAegX,QAE7C,gBAACpD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWqD,QAAS,EAApB,2BACA,eAACrD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BnX,EAAeiX,QAE7C,gBAACrD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWqD,QAAS,EAApB,mBACA,eAACrD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BnX,EAAegX,EAAWC,QAExD,eAACrD,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,uBAAMhC,MAAO,CAAEuF,UAAW,UAA1B,sE,4CCrBjB,SAASC,GAAT,GAAyD,IAAlCxX,EAAiC,EAAjCA,MAAiC,IAA1ByX,gBAA0B,SAC3DtV,EAAWmG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCC,OACF8B,EAAWmE,KAEjB,OACI,eAACwL,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE2H,SAAU,KAAvB,UACI,eAACC,GAAA,EAAD,UACI,gBAAC5D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,CAAWsD,MAAM,QAAjB,mBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,SAAjB,sBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,sBAEIG,GACA,eAACzD,GAAA,EAAD,CAAWsD,MAAM,eAI7B,eAACxD,GAAA,EAAD,UACK9T,EAAM2M,KAAI,SAAAxC,GAAI,OACX,gBAAC4J,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE6H,OAAQ,IAFxD,UAII,eAAC5D,GAAA,EAAD,CAAW/E,UAAU,KAAK4I,MAAM,MAAhC,SACI,gBAAC,KAAD,CAAKzK,QAAQ,OAAOE,WAAW,SAA/B,UACI,sBAAKoG,IAAKvJ,EAAK4G,WAAY4C,IAAKxJ,EAAKnI,KAAMgQ,MAAO,CAAEnC,OAAQ,GAAIiI,YAAa,MAC7E,gCAAO3N,EAAKnI,YAGpB,gBAACgS,GAAA,EAAD,CAAWsD,MAAM,QAAjB,eAA4BnN,EAAK8G,MAAQ,KAAK5Q,QAAQ,MACtD,gBAAC2T,GAAA,EAAD,CAAWsD,MAAM,SAAjB,UAEQG,GACA,eAACpG,GAAA,EAAD,CACIC,QAASnP,IAAW,oBAAsBgI,EAAK1I,UAAY,MAC3D4K,QAAS,kBAAMpI,EAASrC,EAAsB,CAC1CH,UAAW0I,EAAK1I,UAChBC,SAAU,EACVM,KAAM,UAEVwL,MAAM,QAPV,SASI,eAACuK,GAAA,EAAD,MAIP5N,EAAKzI,SAGF+V,GACA,eAACpG,GAAA,EAAD,CACIC,QAASnP,IAAW,iBAAmBgI,EAAK1I,UAC5C4K,QAAS,kBAAMpI,EAASzC,EAAmB,CAAEC,UAAW0I,EAAK1I,cAC7D+L,MAAM,YAHV,SAKI,eAACwK,GAAA,EAAD,SAIZ,gBAAChE,GAAA,EAAD,CAAWsD,MAAM,QAAjB,eAA6BnN,EAAK8G,MAAQ,IAAO9G,EAAKzI,UAAUrB,QAAQ,MAEpEoX,GACA,eAACzD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SACI,eAACjG,GAAA,EAAD,CACIC,QAASnP,IAAW,oBAAsBgI,EAAK1I,UAAY,MAC3D4K,QAAS,kBAAMpI,EAASrC,EAAsB,CAC1CH,UAAW0I,EAAK1I,UAChBC,SAAUyI,EAAKzI,SACfM,KAAM,UAEVwL,MAAM,QAPV,SASI,eAACyK,GAAA,EAAD,UApDP9N,EAAK1I,qBC5BvB,SAASyW,KACpB,IAAQhW,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OAER,OAAKA,EAGD,uCACI,eAACsV,GAAD,CAAaxX,MAAOkC,EAAOlC,QAC3B,gBAAC2R,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAACsF,GAAD,IACA,eAAC9K,EAAA,EAAD,CACI6C,UAAWuC,KACXC,GAAG,YACHxF,QAAQ,YACRwB,KAAK,QACLtB,WAAS,EALb,+BATI,eAACJ,EAAA,EAAD,CAAYE,QAAQ,KAApB,kC,kCCKT,SAASkM,KAAS,IAAD,IACtBtT,EAAUkS,cACVqB,EAAWpB,cACX/S,EAAWmE,KACjB,EAAiFiQ,aAAQ,CACrFC,KAAM,QADFxN,EAAR,EAAQA,SAAUyN,EAAlB,EAAkBA,aAAlB,IAAgCC,UAAaC,EAA7C,EAA6CA,aAAcpP,EAA3D,EAA2DA,OAAQqP,EAAnE,EAAmEA,QAJvC,sDAQ5B,WAA0B3X,GAA1B,4GAEckD,EAASL,EAAW7C,IAFlC,OAGQ8D,EAAQC,MAAK,UAAAsT,EAAS9V,aAAT,mBAAgBqW,YAAhB,eAAsBnP,WAAY,YAHvD,+CAKQjG,QAAQC,IAAR,MALR,yDAR4B,sBAiB5B,OACI,gBAACsI,EAAA,EAAD,CAAWmD,UAAW6D,KAAO8F,SAAS,KAAK7I,GAAI,CAAE3C,QAAS,OAAQyL,cAAe,SAAUvL,WAAY,SAAU0F,EAAG,GAApH,UACI,eAAC1C,GAAA,EAAD,CAAQP,GAAI,CAAE+I,EAAG,EAAGvI,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACxE,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAnC,qBAGA,gBAAC,KAAD,CAAKgD,UAAU,OAAO8J,SAAUR,GAzBZ,8CAyBsCS,YAAU,EAACjJ,GAAI,CAAEkJ,GAAI,GAA/E,UACI,eAACtG,GAAA,EAAD,yBACIuG,OAAO,SACP/M,WAAS,EACTyC,MAAM,WACNuK,WAAS,GACLrO,EAAS,WAAY,CAAEsO,SAAU,0BALzC,IAMItY,QAASuI,EAAOgQ,SAChBC,WAAU,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAQgQ,gBAAV,aAAE,EAAkB5J,WAElC,eAACkD,GAAA,EAAD,yBACIuG,OAAO,SACP/M,WAAS,EACTyC,MAAM,WACNuC,KAAK,YACDrG,EAAS,WAAY,CAAEsO,SAAU,0BALzC,IAMItY,QAASuI,EAAOkQ,SAChBD,WAAU,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAQkQ,gBAAV,aAAE,EAAkB9J,WAElC,eAAC4B,GAAA,EAAD,CACI8C,UAAWuE,EACXpH,QAASmH,EACTtH,KAAK,SACLhF,WAAS,EACTF,QAAQ,YACR8D,GAAI,CAAEkJ,GAAI,EAAGlG,GAAI,GANrB,qBAUA,eAACpB,GAAA,EAAD,CAAMQ,WAAS,EAAf,SACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAAV,SACI,eAAC,KAAD,CAAMsH,GAAG,YAAT,SACK,6CCzDd,SAAS+H,KAAY,IAAD,MACzB3U,EAAUkS,cAChB,EAA2FsB,aAAQ,CAC/FC,KAAM,QADFxN,EAAR,EAAQA,SAAUyN,EAAlB,EAAkBA,aAAckB,EAAhC,EAAgCA,SAAhC,IAA0CjB,UAAaC,EAAvD,EAAuDA,aAAcpP,EAArE,EAAqEA,OAAQqP,EAA7E,EAA6EA,QAkB7E,OACI,gBAAC5M,EAAA,EAAD,CAAWmD,UAAW6D,KAAO8F,SAAS,KAAK7I,GAAI,CAAE3C,QAAS,OAAQyL,cAAe,SAAUvL,WAAY,SAAU0F,EAAG,GAApH,UACI,eAAC1C,GAAA,EAAD,CAAQP,GAAI,CAAE+I,EAAG,EAAGvI,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACxE,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAnC,sBAGA,gBAAC,KAAD,CACIgD,UAAU,OACV8J,SACIR,GAAa,SAAAxX,GAAI,OACbL,GAAMmD,QAAQiH,SAAS/J,GAClB8I,MAAK,WACF1E,IAAMuU,QAAQ,+CACd7U,EAAQC,KAAK,aAEhBwH,OAAM,SAAAxL,GAAK,OA/BpC,SAAyBuI,GACjBA,GACAA,EAAOsQ,SAAQ,SAAC7Y,GACRA,EAAMyQ,SAAS,YACfkI,EAAS,WAAY,CAAEhK,QAAS3O,IACzBA,EAAMyQ,SAAS,SACtBkI,EAAS,QAAS,CAAEhK,QAAS3O,IACtBA,EAAMyQ,SAAS,aACtBkI,EAAS,WAAY,CAAEhK,QAAS3O,OAuBR8Y,CAAgB9Y,SAG5CkY,YAAU,EACVjJ,GAAI,CAAEkJ,GAAI,GAbd,UAeI,eAACtG,GAAA,EAAD,yBACIuG,OAAO,SACP/M,WAAS,EACTyC,MAAM,WACNuK,WAAS,GACLrO,EAAS,WAAY,CAAEsO,SAAU,0BALzC,IAMItY,QAASuI,EAAOgQ,SAChBC,WAAU,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAQgQ,gBAAV,aAAE,EAAkB5J,WAElC,eAACkD,GAAA,EAAD,yBACIuG,OAAO,SACP/M,WAAS,EACTyC,MAAM,SAEH9D,EAAS,QAAS,CACjBsO,SAAU,oBACVS,QAAS,CACLrL,MAAO,6CACPiB,QAAS,gCATrB,IAaI3O,QAASuI,EAAO+L,MAChBkE,WAAU,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAQ+L,aAAV,aAAE,EAAe3F,WAE/B,eAACkD,GAAA,EAAD,yBACIuG,OAAO,SACP/M,WAAS,EACTyC,MAAM,WACNuC,KAAK,YAEFrG,EAAS,WAAY,CACpBsO,SAAU,uBACVS,QAAS,CACLrL,MAAO,wGACPiB,QAAS,qDAVrB,IAcI3O,QAASuI,EAAOkQ,SAChBD,WAAU,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAQkQ,gBAAV,aAAE,EAAkB9J,WAElC,eAAC4B,GAAA,EAAD,CACI8C,UAAWuE,EACXpH,QAASmH,EACTtH,KAAK,SACLhF,WAAS,EACTF,QAAQ,YACR8D,GAAI,CAAEkJ,GAAI,EAAGlG,GAAI,GANrB,sBAUA,eAACpB,GAAA,EAAD,CAAMQ,WAAS,EAAf,SACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAAV,SACI,eAAC,KAAD,CAAMsH,GAAG,SAAT,SACK,+C,6BCtGd,SAASqI,GAAT,GAAwE,IAArCC,EAAoC,EAA/C9K,UAAsBlK,EAAyB,EAAzBA,MAAUiV,EAAe,kBAC1EhW,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KAER,OACI,eAAC,IAAD,2BACQgW,GADR,IAEIC,OACI,SAAAC,GACI,OAAKlW,GAIDe,GAAS,OAACA,QAAD,IAACA,KAAOoV,MAAK,SAAAC,GAAC,uBAAIpW,EAAKe,aAAT,aAAI,EAAYwM,SAAS6I,MAK7C,eAACL,EAAD,eAAeG,KAJlB/U,IAAMrE,MAAM,sCACL,eAAC,IAAD,CAAU2Q,GAAI,CAAEjI,SAAU,eAL1B,eAAC,IAAD,CAAUiI,GAAI,CAAEjI,SAAU,SAAUlH,MAAO,CAAEqW,KAAMuB,EAAM9B,iBCPzE,SAASiC,GAAT,GAA4D,IAAD,EAAlCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,iBACrCpD,EAAQ,UAAGmD,EAAME,WAAWrE,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAOjM,EAAKzI,SAAWyI,EAAK8G,QAAQ,UAA9E,QAAoF,EAClG,OACI,uCACI,gBAAC9D,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAnC,UACI,gBAACtB,EAAA,EAAD,CAAYgE,GAAI,CAAEiD,EAAG,GAAKhH,cAAY,EAACC,QAAQ,KAA/C,oBAA4DqO,EAAMhQ,GAAlE,MAAyEgQ,EAAMG,eAC/E,eAACrO,EAAA,EAAD,CAAQC,QAAS,kBAAMkO,EAAiB,IAAIxK,GAAI,CAAE+I,EAAG,GAAKrL,KAAK,QAAQxB,QAAQ,YAA/E,+BAEJ,eAACuL,GAAD,CAAaxX,MAAOsa,EAAME,WAA4B/C,UAAU,IAChE,gBAAC9F,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACsF,GAAD,CAAeC,SAAUA,YChB9B,SAASnM,KACpB,MAA4BW,qBAA5B,mBAAO+O,EAAP,KAAeC,EAAf,KACA,EAA8BhP,oBAAS,GAAvC,mBAAgBiP,GAAhB,WACA,EAAsDjP,mBAAS,GAA/D,mBAAOkP,EAAP,KAA4BC,EAA5B,KAWA,OATAvL,qBAAU,WACN7O,GAAMsK,OAAOzE,OACRsD,MAAK,SAAA6Q,GAAM,OAAIC,EAAUD,MACzBpO,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bia,SAAQ,kBAAMH,GAAW,QAC/B,IAICC,EAAsB,EACtB,eAACR,GAAD,CACIC,MAAK,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAQlH,MAAK,SAAAwH,GAAC,OAAIA,EAAE1Q,KAAOuQ,KAClCN,iBAAkBO,IAKtB,eAAClH,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE2H,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC5D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,eAACA,GAAA,EAAD,CAAWsD,MAAM,QAAjB,mBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,wBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,0BACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,eAGzB,eAACxD,GAAA,EAAD,iBAEQ4G,QAFR,IAEQA,OAFR,EAEQA,EAAQ/N,KAAI,SAAA2N,GAAK,OACb,gBAACvG,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE6H,OAAQ,IAFxD,UAII,eAAC5D,GAAA,EAAD,CAAW/E,UAAU,KAAK4I,MAAM,MAAhC,SACKyC,EAAMhQ,KAEX,eAAC0J,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BnX,EAAema,EAAMW,SAC/C,eAACjH,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BgD,EAAMY,UAAUhW,MAAM,KAAK,KACrD,eAAC8O,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BgD,EAAMG,cAChC,eAACzG,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SACI,eAAClL,EAAA,EAAD,CAAQC,QAAS,kBAAMyO,EAAuBR,EAAMhQ,KAApD,sBAVCgQ,EAAMhQ,c,6DCnC5B,SAAS6Q,GAAajB,GAAe,IAAD,EAC/C,EAA8BkB,aAAc,2BAAKlB,GAAN,IAAamB,aAAc,MAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAEpB,OACI,eAAC5I,GAAA,EAAD,uCACQuH,GACAqB,GAFR,IAGIC,UAAWtB,EAAMsB,UACjBC,KAAMvB,EAAMuB,KACZtK,KAAM+I,EAAM/I,KACZhF,WAAS,EACTF,QAAQ,WACRnL,QAASwa,EAAWxa,MACpBwY,WAAU,UAAEgC,EAAWxa,aAAb,aAAE,EAAkB2O,WCf3B,SAASiM,GAAYxB,GAChC,IAAQqB,EAAUH,aAAc,2BAAKlB,GAAN,IAAamB,cAAc,KAAlDE,MAER,OACI,eAACnN,GAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,2BACQiN,GADR,IAEIvN,QAASuN,EAAM/M,MACfhB,MAAM,YACN2G,SAAU+F,EAAM/F,YAGxBvF,MAAOsL,EAAMtL,QCfV,SAAS+M,KACpB,MAA+BC,eAAvBvN,EAAR,EAAQA,QAASmK,EAAjB,EAAiBA,UAEjB,OACI,uCACI,eAACzM,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,8BAGA,gBAAC2F,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,GAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,gBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACuJ,GAAD,CAAc9M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,gBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACuJ,GAAD,CAAc9M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,gBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,OAAO4M,MAAM,WAEtD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,QAAQ4M,MAAM,YAEvD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,MAAM4M,MAAM,UAErD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,UAAU4M,MAAM,cAEzD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAAC8J,GAAD,CACIvH,UAAWqE,EAAUsD,QACrB9Z,KAAK,cACL4M,MAAM,mCACNP,QAASA,Y,qBCpCpB0N,GAAcC,sBAAW,WAClCC,GAAoB,IADgDlC,EACjD,EADsC9K,UAAyBiL,EAC/D,kBACbgC,EAAaC,mBAMnB,OAJAC,8BAAoBH,GAAK,iBAAO,CAC5BI,MAAO,kBAAMH,EAAWI,QAAQD,WAIhC,eAACtC,EAAD,aACIwC,QAAS,SAACC,GAAD,OAAkBN,EAAWI,QAAUE,IAC5CtC,OCFD,SAASuC,GAAT,GAA+D,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,kBACrCtO,EAAYuN,eAAZvN,QAER,OACI,uCACI,eAACtC,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,4BAGA,gBAAC2F,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIgL,GAAI,EAAvB,SACI,eAACzB,GAAD,CAAcnZ,KAAK,aAAa4M,MAAM,eAAeP,QAASA,MAElE,eAACsD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIgL,GAAI,EAAvB,SACI,eAACjK,GAAA,EAAD,CACI/E,SAAU+O,EACV7b,QAAS4b,EAAUG,aAAaC,WAChCxD,WAAYoD,EAAUG,aAAaC,WACnCxS,GAAG,aACHsE,MAAM,cACNzC,WAAS,EACT4Q,aAAa,YACb9Q,QAAQ,WACR+Q,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRnO,UAAWoO,2BAK3B,eAAC1L,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIgL,GAAI,EAAvB,SACI,eAACjK,GAAA,EAAD,CACI/E,SAAU+O,EACV7b,QAAS4b,EAAUG,aAAaS,WAChChE,WAAYoD,EAAUG,aAAaS,WACnChT,GAAG,UACHsE,MAAM,cACNzC,WAAS,EACT4Q,aAAa,SAEb9Q,QAAQ,WACR+Q,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRnO,UAAWsO,2BAK3B,eAAC5L,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIgL,GAAI,EAAvB,SACI,eAACjK,GAAA,EAAD,CACI/E,SAAU+O,EACV7b,QAAS4b,EAAUG,aAAaW,QAChClE,WAAYoD,EAAUG,aAAaW,QACnClT,GAAG,MACHsE,MAAM,MACNzC,WAAS,EACT4Q,aAAa,SAEb9Q,QAAQ,WACR+Q,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRnO,UAAWwO,8BC1E5B,SAASC,KACpB,IAAQxb,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OAER,OACI,uCACI,eAAC6J,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,2BAII9J,GACA,eAACsV,GAAD,CAAaxX,MAAOkC,EAAOlC,MAAOyX,UAAU,IAEhD,gBAAC9F,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACsF,GAAD,Y,uBCnBPyG,GAAmB,CAC5BC,KAAW,CACPC,SAAUD,OAAaxE,SAAS,yBAChC0E,SAAUF,OAAaxE,SAAS,8BAChC2E,SAAUH,OAAaxE,WACvB4E,KAAMJ,OAAaxE,WACnB9W,MAAOsb,OAAaxE,WACpB6E,IAAKL,OAAaxE,WAClB8E,QAASN,OAAaxE,aAE1BwE,OACAA,KAAW,CACPO,WAAYP,OAAaxE,c,gCCE3BgF,GAAQ,CAAC,mBAAoB,oBAAqB,mBAEzC,SAASC,KACpB,MAAoC1S,mBAAS,GAA7C,mBAAO2S,EAAP,KAAmBC,EAAnB,KACA,EAAsC5S,mBAAS,GAA/C,mBAAO6S,EAAP,KAAoBC,EAApB,KACA,EAA8B9S,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBsJ,EAAhB,KAEM3W,EAAWmE,KAEjB,EAAkCuD,mBAAoE,CAAEkR,aAAc,KAAtH,mBAAOH,EAAP,KAAkBgC,EAAlB,KACA,EAAwC/S,mBAAc,CAAEmR,YAAY,EAAOQ,YAAY,EAAOE,SAAS,IAAvG,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAA4CjT,mBAAS,IAArD,mBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAgDnT,oBAAS,GAAzD,mBAAOoT,EAAP,KAAyBC,EAAzB,KACQ9c,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OACF+c,EAASC,uBACTC,EAAWC,yBAEjB,SAASzC,EAAkBlK,GAAa,IAAD,EACnCiM,EAAa,2BACNhC,GADK,IAERG,aAAa,2BACNH,EAAUG,cADL,mBAEPpK,EAAM4M,YAFC,UAEa5M,EAAM3R,aAFnB,aAEa,EAAa2O,aAG1CmP,EAAgB,2BAAKD,GAAN,mBAAqBlM,EAAM4M,YAAc5M,EAAM6M,YAgBlE,IAAMC,EAA0B5B,GAAiBW,GAE3CkB,EAAUnH,aAAQ,CACpBC,KAAM,MACNmH,SAAUC,aAAYH,KA3CS,SAuDpBI,EAvDoB,wFAuDnC,WAA2B5e,GAA3B,kGACI6Z,GAAW,GACHuD,EAAgDpd,EAAhDod,WAAYyB,EAAoC7e,EAApC6e,YAAgBC,EAFxC,YAE4D9e,EAF5D,IAGSke,GAAWE,EAHpB,iEAKcW,EAAcX,EAASY,WAAW1C,sBALhD,SAMoC4B,EAAOe,mBAAP,OAA0B9d,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQ+d,aAAe,CACzEC,eAAgB,CACZC,KAAML,EACNM,gBAAiB,CACbpe,KAAMmc,MAV1B,UAMckC,EANd,OAcQ9c,QAAQC,IAAI6c,GACgC,eAAxC,UAAAA,EAAcC,qBAAd,eAA6Bne,QAfzC,kCAgBsCzB,GAAMsK,OAAOE,OAAO,CAAE0U,cAAaC,oBAhBzE,QAgBkBrB,EAhBlB,OAiBYC,EAAeD,GACfQ,GAAoB,GACpBF,EAAkB,6CAClBP,EAAcD,EAAa,GAC3Bra,EAASxB,KArBrB,wBAuBYqc,EAAiB,UAACuB,EAAcvf,aAAf,aAAC,EAAqB2O,SACvCuP,GAAoB,GACpBT,EAAcD,EAAa,GAzBvC,0DA4BQ/a,QAAQC,IAAR,MA5BR,yBA8BQoX,GAAW,GA9BnB,8EAvDmC,sBA8CnCrL,qBAAU,WACN7O,GAAMmD,QAAQkH,eACTlB,MAAK,SAAArD,GACEA,GACAgZ,EAAQe,MAAR,uCAAmBf,EAAQgB,aAAgBha,GAA3C,IAAqDoZ,aAAa,UAG/E,CAACJ,IAoCJ,IAAMiB,EAAU,iDAAG,WAAO1f,GAAP,8EACXud,IAAeF,GAAMnY,OAAS,EADnB,gCAEL0Z,EAAY5e,GAFP,6BAIXwd,EAAcD,EAAa,GAJhB,2CAAH,sDAQVoC,EAAa,WACfnC,EAAcD,EAAa,IAc/B,OACI,eAAC,KAAD,2BAAkBkB,GAAlB,aACI,gBAAC1M,GAAA,EAAD,CAAO7G,QAAQ,WAAW8D,GAAI,CAAE4Q,GAAI,CAAE/O,GAAI,EAAGgL,GAAI,GAAK5J,EAAG,CAAEpB,GAAI,EAAGgL,GAAI,IAAtE,UACI,eAAC7Q,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAKqL,MAAM,SAA9C,sBAGA,eAACsJ,GAAA,EAAD,CAAStC,WAAYA,EAAYvO,GAAI,CAAE8Q,GAAI,EAAGC,GAAI,GAAlD,SAEQ1C,GAAMzR,KAAI,SAACiC,GAAD,OACN,eAACmS,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UAAYpS,KADLA,QAMvB,qCACK0P,IAAeF,GAAMnY,OAClB,uCACI,eAAC8F,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,SACK6S,IAGDE,EACI,gBAAChT,EAAA,EAAD,CAAYE,QAAQ,YAApB,mCAC2BuS,EAD3B,yIAMA,eAACpS,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAASqU,EAArC,sCAOZ,wBAAM3H,SAAUyG,EAAQjH,aAAakI,GAArC,UA1HpB,SAAwBQ,GACpB,OAAQA,GACJ,KAAK,EACD,OAAO,eAACtF,GAAD,IACX,KAAK,EACD,OAAO,eAAC+B,GAAD,IACX,KAAK,EACD,OAAO,eAACjB,GAAD,CAAaC,UAAWA,EAAWC,kBAAmBA,IACjE,QACI,MAAM,IAAIuE,MAAM,iBAkHHC,CAAe7C,GAChB,gBAAC,KAAD,CAAKvO,GAAI,CAAE3C,QAAS,OAAQC,eAAgB,YAA5C,UAEuB,IAAfiR,GACI,eAAClS,EAAA,EAAD,CAAQC,QAASqU,EAAY3Q,GAAI,CAAEkJ,GAAI,EAAGmI,GAAI,GAA9C,kBAKR,eAAC/P,GAAA,EAAD,CACIC,QAASA,EACT6C,SA1DxBmK,IAAeF,GAAMnY,OAAS,KACtB0Y,EAAanB,UACbmB,EAAarB,aACbqB,EAAa7B,cAGb0C,EAAQhH,UAAUE,QAqDFzM,QAAQ,YACRkF,KAAK,SACLpB,GAAI,CAAEkJ,GAAI,EAAGmI,GAAI,GALrB,SAOK9C,IAAeF,GAAMnY,OAAS,EAAI,cAAgB,uBC9KvF,IAAMob,GAAgBC,aAAW,+GAElB,SAASC,KACpB,IAAMtd,EAAWmE,KACjB,EAA8BuD,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBsJ,EAAhB,KASA,OAPArL,qBAAU,WACN7O,GAAMyK,SAASC,sBACVvB,MAAK,SAAA3H,GAAM,OAAI+B,EAAS5B,EAAUH,OAClCoK,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bia,SAAQ,kBAAMH,GAAW,QAC/B,CAAC3W,IAEAqN,EAAgB,eAAC9B,GAAD,CAAkBC,QAAQ,wBAG1C,eAAC,YAAD,CAAUwP,OAAQoC,GAAlB,SACI,eAAChD,GAAD,M,4CClBG,SAASmD,GAAYtH,GAAe,IAAD,EAC9C,EAA8BkB,aAAc,2BAAKlB,GAAN,IAAamB,aAAc,QAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAEdkG,EAAW,CACbrU,QAAS,OACTwK,OAAQ,kBACR8J,YAAa,OACbC,aAAc,MACdC,WAAY,OACZtU,WAAY,SACZuC,OAAQ,IACRkC,MAAO,KAOL8P,EAASC,uBAAY,SAAAC,GACvBA,EAAc,GAAKC,OAAOC,OAAOF,EAAc,GAAI,CAAEG,QAASC,IAAIC,gBAAgBL,EAAc,MAChGxG,EAAM3N,SAASmU,EAAc,MAC9B,CAACxG,IACJ,EAAsD8G,aAAY,CAAER,WAA5DS,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAErC,OACI,gDAASF,KAAT,aACI,gBAACtT,GAAA,EAAD,CAAagD,MAAOwQ,EAAY,2BAAQf,GAZ/B,CACbC,YAAa,UAWyDD,EAAU3gB,QAASwa,EAAWxa,MAAhG,UACI,sCAAWyhB,MACX,eAACE,GAAA,EAAD,CAAY1S,GAAI,CAAE2S,SAAU,WAC5B,eAAC3W,EAAA,EAAD,CAAYE,QAAQ,KAApB,6BACA,eAAC0W,GAAA,EAAD,oBAAiBrH,EAAWxa,aAA5B,aAAiB,EAAkB2O,gB,wBC9BpC,SAASmT,GAAc1I,GAAe,IAAD,EAChD,EAA8BkB,aAAc,2BAAKlB,GAAN,IAAamB,aAAc,MAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAEpB,OACI,gBAACvM,GAAA,EAAD,CAAa7C,WAAS,EAACrL,QAASwa,EAAWxa,MAA3C,UACI,eAAC+hB,GAAA,EAAD,UAAa3I,EAAMtL,QACnB,eAACkU,GAAA,EAAD,CACItU,MAAO+M,EAAM/M,MACbI,MAAOsL,EAAMtL,MACbhB,SAAU2N,EAAM3N,SAHpB,SAMQsM,EAAMla,MAAM2M,KAAI,SAACxC,EAAM4Y,GAAP,OACZ,eAACtN,GAAA,EAAD,CAAsBjH,MAAOrE,EAA7B,SAAoCA,GAArB4Y,QAI3B,eAACJ,GAAA,EAAD,oBAAiBrH,EAAWxa,aAA5B,aAAiB,EAAkB2O,aCvBxC,IAAMkO,GAAmBC,KAAW,CACvC5b,KAAM4b,OAAaxE,WACnBlI,MAAO0M,OAAaxE,WACpBjI,KAAMyM,OAAaxE,WACnBnI,MAAO2M,OAAaxE,WAAW4J,SAAS,KACxC9O,gBAAiB0J,OAAaxE,WAAW6J,IAAI,GAC7ChP,YAAa2J,OAAaxE,WAC1B8J,KAAMtF,OAAYuF,KAAK,aAAc,CACjCC,GAAI,SAAC5U,GAAD,OAAoBA,GACxB3E,KAAM+T,OAAYxE,SAAS,+BCSpB,SAASiK,GAAT,GAAsD,IAA/B9X,EAA8B,EAA9BA,QAAS+X,EAAqB,EAArBA,WAC3C,EAAsFjL,aAAQ,CAC1FoH,SAAUC,aAAY/B,MADlBtP,EAAR,EAAQA,QAASkS,EAAjB,EAAiBA,MAAOhI,EAAxB,EAAwBA,aAAcgL,EAAtC,EAAsCA,MAAtC,IAA6C/K,UAAasD,EAA1D,EAA0DA,QAASrD,EAAnE,EAAmEA,aAGnE,EAA0BrJ,KAAlBpJ,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,MACVsd,EAAYD,EAAM,OAAQ,MAC1Btf,EAAWmE,KAN+C,sDAehE,WAAgCrH,GAAhC,8FAGYwK,EAHZ,gCAI6B7K,GAAM2K,MAAMG,cAAczK,GAJvD,OAIYyF,EAJZ,8CAM6B9F,GAAM2K,MAAMC,cAAcvK,GANvD,OAMYyF,EANZ,eAQQvC,EAASmD,GAAWZ,IACpB8c,IATR,kDAWQ/f,QAAQC,IAAR,MAXR,2DAfgE,sBA8BhE,OAtBA+L,qBAAU,WAEN,OADIhE,GAAYiY,GAAc1H,GAASyE,EAAMhV,GACtC,WACCiY,GAAWrB,IAAIsB,gBAAgBD,EAAUtB,YAElD,CAAC3W,EAASgV,EAAOiD,EAAW1H,IAkB3B,gBAAC,KAAD,CAAK7M,UAAW6D,KAAO/C,GAAI,CAAEiD,EAAG,GAAhC,UACI,eAACjH,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAAC+D,GAAI,CAAEgD,GAAI,GAAhD,6BAGA,wBAAMgG,SAAUR,GAnCwC,8CAmCxD,UACI,gBAAC5G,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,GAAvB,SACI,eAACV,GAAD,CAAc9M,QAASA,EAASrM,KAAK,OAAO4M,MAAM,mBAEtD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAAC+G,GAAD,CAAevU,QAASA,EAASrO,MAAOgG,EAAQhE,KAAK,QAAQ4M,MAAM,YAEvE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAAC+G,GAAD,CAAevU,QAASA,EAASrO,MAAOkG,EAAOlE,KAAK,OAAO4M,MAAM,WAErE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAchK,KAAK,SAAS9C,QAASA,EAASrM,KAAK,QAAQ4M,MAAM,YAErE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAchK,KAAK,SAAS9C,QAASA,EAASrM,KAAK,kBAAkB4M,MAAM,wBAE/E,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACuJ,GAAD,CAAcK,WAAW,EAAMC,KAAM,EAAGpN,QAASA,EAASrM,KAAK,cAAc4M,MAAM,kBAEvF,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,gBAAC,KAAD,CAAKxE,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAA9D,UACI,eAACkU,GAAD,CAAanT,QAASA,EAASrM,KAAK,SAEhCwhB,EACI,sBAAK9P,IAAK8P,EAAUtB,QAASvO,IAAI,UAAU3B,MAAO,CAAE4C,UAAW,OAE/D,sBAAKlB,IAAG,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAASwF,WAAY4C,IAAG,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAASvJ,KAAMgQ,MAAO,CAAE4C,UAAW,eAM3F,gBAAC,KAAD,CAAKxH,QAAQ,OAAOC,eAAe,gBAAgB0C,GAAI,CAAEkJ,GAAI,GAA7D,UACI,eAAC7M,EAAA,EAAD,CAAQC,QAASiX,EAAYrX,QAAQ,YAAYuB,MAAM,UAAvD,oBACA,eAAC6D,GAAA,EAAD,CAAeC,QAASmH,EAActH,KAAK,SAASlF,QAAQ,YAAYuB,MAAM,UAA9E,6BC7EL,SAASkW,KACpB,MAA+BtU,KAAvBC,EAAR,EAAQA,SAAUpP,EAAlB,EAAkBA,SACZgE,EAAWmE,KACjB,EAAgCuD,oBAAS,GAAzC,mBAAOgY,EAAP,KAAiBC,EAAjB,KACA,EAA8CjY,wBAA8BvI,GAA5E,mBAAOygB,EAAP,KAAwBC,EAAxB,KACA,EAA8BnY,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBsJ,EAAhB,KACA,EAA4BjP,mBAAS,GAArC,mBAAO+G,EAAP,KAAeqR,EAAf,KAqBA,OAAIJ,EAAiB,eAACN,GAAD,CAAa9X,QAASsY,EAAiBP,WAL5D,WACQO,GAAiBC,OAAmB1gB,GACxCwgB,GAAY,MAMZ,uCACI,gBAAC,KAAD,CAAKxW,QAAQ,OAAOC,eAAe,gBAAnC,UACI,eAACtB,EAAA,EAAD,CAAYgE,GAAI,CAAEiD,EAAG,GAAK/G,QAAQ,KAAlC,uBACA,eAACG,EAAA,EAAD,CAAQC,QAAS,kBAAMuX,GAAY,IAAO7T,GAAI,CAAE+I,EAAG,GAAKrL,KAAK,QAAQxB,QAAQ,YAA7E,uBAEJ,eAAC2H,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE2H,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC5D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,gBACA,eAACA,GAAA,EAAD,CAAWsD,MAAM,OAAjB,qBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,QAAjB,mBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,SAAjB,kBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,SAAjB,mBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,SAAjB,sBACA,eAACtD,GAAA,EAAD,CAAWsD,MAAM,eAGzB,eAACxD,GAAA,EAAD,UAEQzE,EAAS1C,KAAI,SAACpB,GAAD,OACT,gBAACwI,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE6H,OAAQ,IAFxD,UAII,eAAC5D,GAAA,EAAD,CAAW/E,UAAU,KAAK4I,MAAM,MAAhC,SACKtM,EAAQjB,KAEb,eAAC0J,GAAA,EAAD,CAAWsD,MAAM,OAAjB,SACI,gBAAC,KAAD,CAAKlK,QAAQ,OAAOE,WAAW,SAA/B,UACI,sBAAKoG,IAAKnI,EAAQwF,WAAY4C,IAAKpI,EAAQvJ,KAAMgQ,MAAO,CAAEnC,OAAQ,GAAIiI,YAAa,MACnF,gCAAOvM,EAAQvJ,YAGvB,eAACgS,GAAA,EAAD,CAAWsD,MAAM,QAAjB,SAA0BnX,EAAeoL,EAAQ0F,SACjD,eAAC+C,GAAA,EAAD,CAAWsD,MAAM,SAAjB,SAA2B/L,EAAQ4F,OACnC,eAAC6C,GAAA,EAAD,CAAWsD,MAAM,SAAjB,SAA2B/L,EAAQ2F,QACnC,eAAC8C,GAAA,EAAD,CAAWsD,MAAM,SAAjB,SAA2B/L,EAAQ2I,kBACnC,gBAACF,GAAA,EAAD,CAAWsD,MAAM,QAAjB,UACI,eAAClL,EAAA,EAAD,CAAQC,QAAS,kBA7DrD,SAA6Bd,GACzBuY,EAAmBvY,GACnBqY,GAAY,GA2D2CI,CAAoBzY,IAAU0Y,UAAW,eAACC,GAAA,EAAD,MAChE,eAAC7S,GAAA,EAAD,CACIC,QAASA,GAAWoB,IAAWnH,EAAQjB,GACvC2Z,UAAW,eAAChM,GAAA,EAAD,IAAYzK,MAAM,QAC7BnB,QAAS,kBA5DpB/B,EA4D8CiB,EAAQjB,GA3D/EsQ,GAAW,GACXmJ,EAAUzZ,QACV5J,GAAM2K,MAAMI,cAAcnB,GACrBT,MAAK,kBAAM5F,EAASqD,GAAcgD,OAClCgC,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bia,SAAQ,kBAAMH,GAAW,MANlC,IAA6BtQ,UAuCQiB,EAAQjB,cA+BjCrK,GACA,eAAC,KAAD,CAAK8P,GAAI,CAAE8Q,GAAI,GAAf,SACI,eAAC/T,GAAD,CACI7M,SAAUA,EACV8M,aAAc,SAACY,GAAD,OAAkB1J,EAASiD,GAAc,CAAEvB,WAAYgI,aCZ9EwW,OA9Df,WACI,IAAMlgB,EAAWmE,KACjB,EAA8BuD,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBsJ,EAAhB,KAEMwJ,EAAUtC,sBAAW,gCAAC,iHAEd7d,EAASK,KAFK,uBAGdL,EAAS3D,KAHK,uDAKpBiD,QAAQC,IAAR,MALoB,yDAOzB,CAACS,IAEJsL,qBAAU,WACN6U,IAAUva,MAAK,kBAAM+Q,GAAW,QACjC,CAACwJ,IAEJ,MAAgCzY,oBAAS,GAAzC,mBAAOqK,EAAP,KAAiBqO,EAAjB,KACMC,EAActO,EAAW,OAAS,QAClCuO,EAAQC,YAAY,CACtBC,QAAS,CACLnM,KAAMgM,EACNI,WAAY,CACRC,QAAyB,UAAhBL,EAA0B,UAAY,cAS3D,OAAIhT,EAAgB,eAAC9B,GAAD,CAAkBC,QAAQ,wBAG1C,gBAACmV,EAAA,EAAD,CAAeL,MAAOA,EAAtB,UACI,eAAC,IAAD,CAAgBvU,SAAS,eAAe6U,iBAAe,EAACN,MAAM,YAC9D,eAACO,EAAA,EAAD,IACA,eAAC/O,GAAD,CAAQC,SAAUA,EAAUC,kBAVpC,WACIoO,GAAarO,MAUT,eAAC,IAAD,CAAOQ,OAAK,EAACb,KAAK,IAAI1G,UAAWqF,KACjC,eAAC,IAAD,CAAOqB,KAAM,QAASsE,OAAQ,kBAC1B,eAACnO,EAAA,EAAD,CAAWiE,GAAI,CAAEkJ,GAAI,GAArB,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOzC,OAAK,EAACb,KAAK,WAAW1G,UAAW3I,KACxC,eAAC,IAAD,CAAOqP,KAAK,eAAe1G,UAAWkE,KACtC,eAAC,IAAD,CAAOwC,KAAK,SAAS1G,UAAWvD,KAChC,eAAC,IAAD,CAAOiK,KAAK,WAAW1G,UAAWoF,KAClC,eAAC,IAAD,CAAOsB,KAAK,gBAAgB1G,UAAW6H,KACvC,eAAC,IAAD,CAAOnB,KAAK,UAAU1G,UAAWiJ,KACjC,eAAC4B,GAAD,CAAcnE,KAAK,YAAY1G,UAAWsS,KAC1C,eAACzH,GAAD,CAAcnE,KAAK,UAAU1G,UAAWjE,KACxC,eAAC8O,GAAD,CAAc/U,MAAO,CAAC,SAAU4Q,KAAK,aAAa1G,UAAWyU,KAC7D,eAAC,IAAD,CAAO/N,KAAK,SAAS1G,UAAWkJ,KAChC,eAAC,IAAD,CAAOxC,KAAK,YAAY1G,UAAWuK,KACnC,eAAC,IAAD,CAAOvK,UAAWgE,iBClE3B8R,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpb,MAAK,YAAkD,IAA/Cqb,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCGDngB,I,cAAU0gB,gBAEvBC,IAASvL,OACL,eAAC,IAAMwL,WAAP,UACI,eAAC,IAAD,CAAQ5gB,QAASA,GAAjB,SACI,eAAC,IAAD,CAAUkD,MAAOA,GAAjB,SACI,eAAC,GAAD,UAIZ5G,SAASukB,eAAe,SAM5BX,O","file":"static/js/main.c60cbb0f.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\")\r\n    return b ? b.pop() : \"\"\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return \"$\" + (amount / 100).toFixed(2)\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { Basket } from \"../../app/models/basket\"\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle',\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity)\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void,\r\n    { productId: number, quantity: number, name?: string }>(\r\n        'basket/removeBasketItemAsync',\r\n        async ({ productId, quantity }, thunkAPI) => {\r\n            try {\r\n                await agent.Basket.removeItem(productId, quantity)\r\n            } catch (error: any) {\r\n                return thunkAPI.rejectWithValue({ error: error.data })\r\n            }\r\n        }\r\n    )\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId\r\n        })\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name\r\n        })\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId)\r\n            if (itemIndex === -1 || itemIndex === undefined) return\r\n            state.basket!.items[itemIndex].quantity -= quantity\r\n            if (state.basket?.items[itemIndex].quantity === 0)\r\n                state.basket.items.splice(itemIndex, 1)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload\r\n            state.status = 'idle'\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        });\r\n    }),\r\n})\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions ","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\"\r\nimport { FieldValues } from \"react-hook-form\"\r\nimport { toast } from \"react-toastify\"\r\nimport { history } from \"../..\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { User } from \"../../app/models/user\"\r\nimport { setBasket } from \"../basket/basketSlice\"\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    \"account/signInUser\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data)\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem(\"user\", JSON.stringify(user))\r\n            return user\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    \"account/fetchCurrentUser\",\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem(\"user\")!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser()\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem(\"user\", JSON.stringify(user))\r\n            return user\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem(\"user\")) return false\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: \"account\",\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null\r\n            localStorage.removeItem(\"user\")\r\n            history.push(\"/\")\r\n        },\r\n        setUser: (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split(\".\")[1]))\r\n            let roles = claims[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"]\r\n            state.user = { ...action.payload, roles: typeof (roles) === \"string\" ? [roles] : roles }\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null\r\n            localStorage.removeItem(\"user\")\r\n            toast.error(\"Session expired - please login again\")\r\n            history.push(\"/\")\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split(\".\")[1]))\r\n            let roles = claims[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"]\r\n            state.user = { ...action.payload, roles: typeof (roles) === \"string\" ? [roles] : roles }\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload\r\n        })\r\n    })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\"\r\nimport { RootState } from \"../../app/store/configureStore\"\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>()\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams()\r\n    params.append(\"pageNumber\", productParams.pageNumber.toString())\r\n    params.append(\"pageSize\", productParams.pageSize.toString())\r\n    params.append(\"orderBy\", productParams.orderBy)\r\n    if (productParams.searchTerm) params.append(\"searchTerm\", productParams.searchTerm)\r\n    if (productParams.brands.length > 0) params.append(\"brands\", productParams.brands.toString())\r\n    if (productParams.types.length > 0) params.append(\"types\", productParams.types.toString())\r\n    return params\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\r\n    \"catalog/fetchProductsAsync\",\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\r\n        try {\r\n            const response = await agent.Catalog.list(params)\r\n            thunkAPI.dispatch(setMetaData(response.metaData))\r\n            return response.items\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    \"catalog/fetchProductAsync\",\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId)\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    \"catalog/fetchFilters\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters()\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: \"name\",\r\n        brands: [],\r\n        types: [],\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: \"catalog\",\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: \"idle\",\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null,\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = { ...state.productParams, ...action.payload }\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload\r\n        },\r\n        resetProductParams: state => {\r\n            state.productParams = initParams()\r\n        },\r\n        setProduct: (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload)\r\n            state.productsLoaded = false\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload)\r\n            state.productsLoaded = false\r\n        },\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, state => {\r\n            state.status = \"pendingFetchProducts\"\r\n        })\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload)\r\n            state.status = \"idle\"\r\n            state.productsLoaded = true\r\n        })\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = \"idle\"\r\n        })\r\n        builder.addCase(fetchProductAsync.pending, state => {\r\n            state.status = \"pendingFetchProduct\"\r\n        })\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload)\r\n            state.status = \"idle\"\r\n        })\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action)\r\n            state.status = \"idle\"\r\n        })\r\n        builder.addCase(fetchFilters.pending, state => {\r\n            state.status = \"pendingFetchFilters\"\r\n        })\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands\r\n            state.types = action.payload.types\r\n            state.filtersLoaded = true\r\n            state.status = \"idle\"\r\n        })\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = \"idle\"\r\n        })\r\n    }),\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog)\r\n\r\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct } = catalogSlice.actions","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: \"YARC (yet another redux counter with redux toolkit)\"\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { increment, decrement } = counterSlice.actions","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\r\nimport { accountSlice } from \"../../features/account/accountSlice\"\r\nimport { basketSlice } from \"../../features/basket/basketSlice\"\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\"\r\nimport { counterSlice } from \"../../features/contact/counterSlice\"\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer)\r\n// }\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer,\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import axios, { AxiosError, AxiosResponse } from \"axios\"\r\nimport { toast } from \"react-toastify\"\r\nimport { history } from \"../..\"\r\nimport { PaginatedResponse } from \"../models/pagination\"\r\nimport { store } from \"../store/configureStore\"\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\naxios.defaults.withCredentials = true\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data\r\n\r\naxios.interceptors.request.use((config: any) => {\r\n    const token = store.getState().account.user?.token\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep()\r\n    const pagination = response.headers[\"pagination\"]\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\r\n        // return response\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status }: any = error.response!\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = []\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat()\r\n            }\r\n            toast.error(data.title)\r\n            break\r\n        case 401:\r\n            toast.error(data.title)\r\n            break\r\n        case 403:\r\n            toast.error(\"You are not allowed to do that!\")\r\n            break\r\n        case 500:\r\n            history.push({\r\n                pathname: \"/server-error\",\r\n                state: { error: data },\r\n            });\r\n            break\r\n        default:\r\n            break\r\n    }\r\n    return Promise.reject(error.response)\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    }).then(responseBody),\r\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    }).then(responseBody),\r\n}\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData()\r\n    for (const key in item) {\r\n        formData.append(key, item[key])\r\n    }\r\n    return formData\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) => requests.postForm(\"products\", createFormData(product)),\r\n    updateProduct: (product: any) => requests.putForm(\"products\", createFormData(product)),\r\n    deleteProduct: (id: number) => requests.delete(`products/${id}`),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params?: URLSearchParams) => requests.get(\"products\", params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get(\"products/filters\"),\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get(\"buggy/bad-request\"),\r\n    get401Error: () => requests.get(\"buggy/unauthorized\"),\r\n    get404Error: () => requests.get(\"buggy/not-found\"),\r\n    get500Error: () => requests.get(\"buggy/server-error\"),\r\n    getValidationError: () => requests.get(\"buggy/validation-error\"),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get(\"basket\"),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post(\"account/login\", values),\r\n    register: (values: any) => requests.post(\"account/register\", values),\r\n    currentUser: () => requests.get(\"account/currentUser\"),\r\n    fetchAddress: () => requests.get(\"account/savedAddress\")\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get(\"orders\"),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post(\"orders\", values),\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post(\"payments\", {}),\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n    Admin,\r\n}\r\n\r\nexport default agent","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport agent from \"../../app/api/agent\"\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([])\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErrors(error))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Typography, Pagination } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useState } from \"react\";\r\nimport { MetaData } from \"../models/pagination\"\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData\r\n    const [pageNumber, setPageNumber] = useState(currentPage)\r\n\r\n    function handlePageChange(page: number) {\r\n        setPageNumber(page)\r\n        onPageChange(page)\r\n    }\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount\r\n                    : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                count={totalPages}\r\n                page={pageNumber}\r\n                onChange={(e, page) => handlePageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n} ","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || [])\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value)\r\n        let newChecked: string[] = []\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value]\r\n        else newChecked = checkedItems.filter(item => item !== value)\r\n        setCheckedItems(newChecked)\r\n        onChange(newChecked)\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {\r\n                items.map(item => (\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checkedItems.indexOf(item) !== -1}\r\n                                onClick={() => handleChecked(item)}\r\n                            />\r\n                        }\r\n                        label={item}\r\n                        key={item}\r\n                    />\r\n                ))\r\n            }\r\n        </FormGroup>\r\n    )\r\n} ","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\"\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {\r\n                    options.map(({ value, label }) => (\r\n                        <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                    ))\r\n                }\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n} ","import { useEffect } from \"react\"\r\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\"\r\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\"\r\n\r\nexport default function useProducts() {\r\n    const products = useAppSelector(productSelectors.selectAll)\r\n    const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync())\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters())\r\n    }, [dispatch, filtersLoaded])\r\n\r\n    return {\r\n        products,\r\n        productsLoaded,\r\n        filtersLoaded,\r\n        brands,\r\n        types,\r\n        metaData,\r\n    }\r\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n} ","import { LoadingButton } from \"@mui/lab\"\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { currencyFormat } from \"../../app/util/util\"\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\"\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes(\"pendingAddItem\" + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))}\r\n                    size=\"small\"\r\n                >\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n} ","import { Card, CardActions, CardContent, CardHeader, Grid, Skeleton } from \"@mui/material\"\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\"\r\nimport ProductCard from \"./ProductCard\"\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\"\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog)\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {\r\n                        !productsLoaded ? (\r\n                            <ProductCardSkeleton />\r\n                        ) : (\r\n                            <ProductCard product={product} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n} ","import { debounce, TextField } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { setProductParams } from \"./catalogSlice\"\r\n\r\nexport default function ProductSearch() {\r\n    const { productParams } = useAppSelector(state => state.catalog)\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({ searchTerm: event.target.value }))\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label=\"Search products\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={searchTerm || \"\"}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value)\r\n                debouncedSearch(event)\r\n            }}\r\n        />\r\n    )\r\n}","import { FormControl, FormGroup, Grid, Paper, RadioGroup } from \"@mui/material\"\r\nimport AppPagination from \"../../app/components/AppPagination\"\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\"\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\"\r\nimport useProducts from \"../../app/hooks/useProducts\"\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { setPageNumber, setProductParams } from \"./catalogSlice\"\r\nimport ProductList from \"./ProductList\"\r\nimport ProductSearch from \"./ProductSearch\"\r\n\r\nconst sortOptions = [\r\n    { value: \"name\", label: \"Alphabetical\" },\r\n    { value: \"priceDesc\", label: \"Price - High to low\" },\r\n    { value: \"price\", label: \"Price - Low to high\" },\r\n]\r\n\r\nexport default function Catalog() {\r\n    const { products, brands, types, filtersLoaded, metaData } = useProducts()\r\n    const { productParams } = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch()\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <FormControl>\r\n                        <RadioGroup>\r\n                            <RadioButtonGroup\r\n                                selectedValue={productParams.orderBy}\r\n                                options={sortOptions}\r\n                                onChange={e => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <FormGroup>\r\n                        <CheckboxButtons\r\n                            items={brands}\r\n                            checked={productParams.brands}\r\n                            onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n                        />\r\n                    </FormGroup>\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <FormGroup>\r\n                        <CheckboxButtons\r\n                            items={types}\r\n                            checked={productParams.types}\r\n                            onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n                        />\r\n                    </FormGroup>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {\r\n                    metaData &&\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n} ","import { LoadingButton } from \"@mui/lab\"\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport NotFound from \"../../app/errors/NotFound\"\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\"\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\"\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch()\r\n    const { id } = useParams<{ id: string }>()\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id))\r\n    const { status: productStatus } = useAppSelector(state => state.catalog)\r\n    const [quantity, setQuantity] = useState(0)\r\n    const item = basket?.items.find(i => i.productId === product?.id)\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity)\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n    }, [id, item, dispatch, product])\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value))\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity\r\n            dispatch(addBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity\r\n            dispatch(removeBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes(\"pending\")) return <LoadingComponent message='Loading product...' />\r\n\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleInputChange}\r\n                            variant=\"outlined\"\r\n                            type=\"number\"\r\n                            label=\"Quantity in Cart\"\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes(\"pending\")}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{ height: \"55px\" }}\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            {item ? \"Update Quantity\" : \"Add to Cart\"}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n} ","import { Button, ButtonGroup, Typography } from \"@mui/material\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { decrement, increment } from \"./counterSlice\"\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch()\r\n    const { data, title } = useAppSelector(state => state.counter)\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n                This data is: {data}\r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant=\"contained\" color=\"error\">Decrement</Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant=\"contained\" color=\"primary\">Increment</Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant=\"contained\" color=\"secondary\">Increment by 5</Button>\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}","import { Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport Slider from \"react-slick\"\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{ display: \"block\", width: \"100%\", maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{ display: \"block\", width: \"100%\", maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{ display: \"block\", width: \"100%\", maxHeight: 500 }} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ p: 4 }}>\r\n                <Typography variant=\"h1\">\r\n                    Welcome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n} ","import { Button, Menu, Fade, MenuItem } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { signOut } from \"../../features/account/accountSlice\"\r\nimport { clearBasket } from \"../../features/basket/basketSlice\"\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\"\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch()\r\n    const { user } = useAppSelector(state => state.account)\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"inherit\"\r\n                onClick={handleClick}\r\n                sx={{ typography: \"h6\" }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to=\"/orders\">My orders</MenuItem>\r\n                <MenuItem\r\n                    onClick={\r\n                        () => {\r\n                            dispatch(signOut())\r\n                            dispatch(clearBasket())\r\n                        }\r\n                    }\r\n                >Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\"\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\"\r\nimport { Link, NavLink } from \"react-router-dom\"\r\nimport { useAppSelector } from \"../store/configureStore\"\r\nimport SignedInMenu from \"./SignedInMenu\"\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: \"catalog\", path: \"/catalog\" },\r\n    { title: \"about\", path: \"/about\" },\r\n    { title: \"contact\", path: \"/contact\" },\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: \"login\", path: \"/login\" },\r\n    { title: \"register\", path: \"/register\" },\r\n]\r\n\r\nconst navStyles = {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    typography: \"h6\",\r\n    \"&:hover\": {\r\n        color: \"grey.500\",\r\n    },\r\n    \"&.active\": {\r\n        color: \"text.secondary\",\r\n    },\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket)\r\n    const { user } = useAppSelector(state => state.account)\r\n\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Typography variant=\"h6\" component={NavLink} exact to=\"/\"\r\n                        sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n                <List sx={{ display: \"flex\" }}>\r\n                    {\r\n                        midLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                    {\r\n                        user && user.roles?.includes(\"Admin\") &&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={\"/inventory\"}\r\n                            sx={navStyles}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to=\"/basket\" size=\"large\" sx={{ color: \"inherit\" }}>\r\n                        <Badge badgeContent={itemCount} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ? (\r\n                            <SignedInMenu />\r\n                        ) : (\r\n                            <List sx={{ display: \"flex\" }}>\r\n                                {rightLinks.map(({ title, path }) => (\r\n                                    <ListItem\r\n                                        component={NavLink}\r\n                                        to={path}\r\n                                        key={path}\r\n                                        sx={navStyles}\r\n                                    >\r\n                                        {title.toUpperCase()}\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        )\r\n                    }\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n} ","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\"\r\nimport { useHistory, useLocation } from \"react-router\"\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory()\r\n    const { state } = useLocation<any>()\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n} ","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\"\r\nimport { currencyFormat } from \"../../app/util/util\"\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket)\r\n\r\n    if (subtotal === undefined) subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0\r\n    const deliveryFee = subtotal > 10000 || (basket?.items.length === 0 ?? 0) ? 0 : 500\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={\"outlined\"}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: \"italic\" }}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\"\r\nimport { LoadingButton } from \"@mui/lab\"\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\"\r\nimport { BasketItem } from \"../../app/models/basket\"\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\"\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\"\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {\r\n                            isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        }\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display=\"flex\" alignItems=\"center\">\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {\r\n                                    isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === \"pendingRemoveItem\" + item.productId + \"rem\"}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId,\r\n                                            quantity: 1,\r\n                                            name: \"rem\"\r\n                                        }))}\r\n                                        color=\"error\"\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>\r\n                                }\r\n\r\n                                {item.quantity}\r\n\r\n                                {\r\n                                    isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === \"pendingAddItem\" + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>\r\n                                }\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {\r\n                                isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === \"pendingRemoveItem\" + item.productId + \"del\"}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId,\r\n                                            quantity: item.quantity,\r\n                                            name: \"del\"\r\n                                        }))}\r\n                                        color=\"error\"\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { Button, Grid, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\"\r\nimport BasketSummary from \"./BasketSummary\"\r\nimport BasketTable from \"./BasketTable\"\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector(state => state.basket)\r\n\r\n    if (!basket) return <Typography variant=\"h3\">Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import Avatar from '@mui/material/Avatar'\r\nimport TextField from '@mui/material/TextField'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { Paper } from '@mui/material'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { FieldValues, useForm } from 'react-hook-form'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { useAppDispatch } from '../../app/store/configureStore'\r\nimport { signInUser } from './accountSlice'\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n    const location = useLocation<any>()\r\n    const dispatch = useAppDispatch()\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data))\r\n            history.push(location.state?.from?.pathname || '/catalog')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n} ","import Avatar from '@mui/material/Avatar'\r\nimport TextField from '@mui/material/TextField'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { Paper } from '@mui/material'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport agent from '../../app/api/agent'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function Register() {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: \"all\"\r\n    })\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes(\"Password\")) {\r\n                    setError(\"password\", { message: error })\r\n                } else if (error.includes(\"Email\")) {\r\n                    setError(\"email\", { message: error })\r\n                } else if (error.includes(\"Username\")) {\r\n                    setError(\"username\", { message: error })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={\r\n                    handleSubmit(data =>\r\n                        agent.Account.register(data)\r\n                            .then(() => {\r\n                                toast.success(\"Registration successful - you can now login\")\r\n                                history.push(\"/login\")\r\n                            })\r\n                            .catch(error => handleApiErrors(error))\r\n                    )\r\n                }\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register(\"username\", { required: \"Username is required\" })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    {\r\n                    ...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                            message: \"Not a valid email address\",\r\n                        },\r\n                    })\r\n                    }\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {\r\n                    ...register(\"password\", {\r\n                        required: \"Pa$$w0rd is required\",\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message: \"Password does not meet complexity requirements\",\r\n                        },\r\n                    })\r\n                    }\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to=\"/login\">\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container >\r\n    )\r\n}","import { ComponentType } from \"react\"\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\"\r\nimport { useAppSelector } from \"../store/configureStore\"\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType;\r\n    roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\r\n    const { user } = useAppSelector(state => state.account)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => {\r\n                    if (!user) {\r\n                        return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n                    }\r\n\r\n                    if (roles && !roles?.some(r => user.roles?.includes(r))) {\r\n                        toast.error(\"Not authorized to access this area\")\r\n                        return <Redirect to={{ pathname: \"/catalog\" }} />\r\n                    }\r\n\r\n                    return <Component {...props} />\r\n                }\r\n            }\r\n        />\r\n    )\r\n}","import { Button, Grid, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { BasketItem } from \"../../app/models/basket\"\r\nimport { Order } from \"../../app/models/order\"\r\nimport BasketSummary from \"../basket/BasketSummary\"\r\nimport BasketTable from \"../basket/BasketTable\"\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography sx={{ p: 2 }} gutterBottom variant=\"h4\">Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size=\"large\" variant=\"contained\">Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n} ","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport agent from \"../../app/api/agent\"\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\"\r\nimport { Order } from \"../../app/models/order\"\r\nimport { currencyFormat } from \"../../app/util/util\"\r\nimport OrderDetailed from \"./OrderDetailed\"\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>()\r\n    const [loading, setLoading] = useState(true)\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed\r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        orders?.map(order => (\r\n                            <TableRow\r\n                                key={order.id}\r\n                                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {order.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                                <TableCell align=\"right\">{order.orderDate.split(\"T\")[0]}</TableCell>\r\n                                <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { TextField } from \"@mui/material\"\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: \"\" })\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            multiline={props.multiline}\r\n            rows={props.rows}\r\n            type={props.type}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\"\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const { field } = useController({ ...props, defaultValue: false })\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color=\"secondary\"\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}","import Grid from \"@mui/material/Grid\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport AppTextInput from \"../../app/components/AppTextInput\"\r\nimport AppCheckbox from \"../../app/components/AppCheckbox\"\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext()\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name=\"fullName\" label=\"Full name\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name=\"address1\" label=\"Address 1\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name=\"address2\" label=\"Address 2\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name=\"city\" label=\"City\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name=\"state\" label=\"State\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name=\"zip\" label=\"Zip\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name=\"country\" label=\"Country\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState.isDirty}\r\n                        name=\"saveAddress\"\r\n                        label=\"Save this as the default address\"\r\n                        control={control}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { InputBaseComponentProps } from \"@mui/material\"\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\"\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props,\r\n    ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>()\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }))\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n}); ","import Typography from \"@mui/material/Typography\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport AppTextInput from \"../../app/components/AppTextInput\"\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from \"@stripe/react-stripe-js\"\r\nimport { StripeInput } from \"./StripeInput\"\r\nimport { StripeElementType } from \"@stripe/stripe-js\"\r\n\r\ninterface Props {\r\n    cardState: { elementError: { [key in StripeElementType]?: string } };\r\n    onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n    const { control } = useFormContext()\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <AppTextInput name=\"nameOnCard\" label=\"Name on card\" control={control} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardNumberElement\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardExpiry}\r\n                        helperText={cardState.elementError.cardExpiry}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardExpiryElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardCvc}\r\n                        helperText={cardState.elementError.cardCvc}\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardCvcElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { Grid } from \"@mui/material\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport BasketSummary from \"../basket/BasketSummary\"\r\nimport BasketTable from \"../basket/BasketTable\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\"\r\n\r\nexport default function Review() {\r\n    const { basket } = useAppSelector(state => state.basket)\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            {\r\n                basket &&\r\n                <BasketTable items={basket.items} isBasket={false} />\r\n            }\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import * as yup from \"yup\"\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required(\"Full name is required\"),\r\n        address1: yup.string().required(\"Address line 1 is required\"),\r\n        address2: yup.string().required(),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required(),\r\n    })\r\n]","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\"\r\nimport AddressForm from \"./AddressForm\"\r\nimport PaymentForm from \"./PaymentForm\"\r\nimport Review from \"./Review\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { validationSchema } from \"./checkoutValidation\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { clearBasket } from \"../basket/basketSlice\"\r\nimport { LoadingButton } from \"@mui/lab\"\r\nimport { StripeElementType } from \"@stripe/stripe-js\"\r\nimport { useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport { CardNumberElement } from \"@stripe/react-stripe-js\"\r\n\r\nconst steps = [\"Shipping address\", \"Review your order\", \"Payment details\"]\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const [orderNumber, setOrderNumber] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} })\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false })\r\n    const [paymentMessage, setPaymentMessage] = useState(\"\")\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false)\r\n    const { basket } = useAppSelector(state => state.basket)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete })\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />\r\n            case 1:\r\n                return <Review />\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />\r\n            default:\r\n                throw new Error(\"Unknown step\")\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep]\r\n\r\n    const methods = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(currentValidationSchema)\r\n    })\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true)\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data\r\n        if (!stripe || !elements) return // stripe is not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement)\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard,\r\n                    },\r\n                },\r\n            })\r\n            console.log(paymentResult)\r\n            if (paymentResult.paymentIntent?.status === \"succeeded\") {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress })\r\n                setOrderNumber(orderNumber)\r\n                setPaymentSucceeded(true)\r\n                setPaymentMessage(\"Thank you - we have received your payment\")\r\n                setActiveStep(activeStep + 1) // setActiveStep(prev => prev + 1)\r\n                dispatch(clearBasket())\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!)\r\n                setPaymentSucceeded(false)\r\n                setActiveStep(activeStep + 1)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data)\r\n        } else {\r\n            setActiveStep(activeStep + 1)\r\n        }\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1)\r\n    }\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {\r\n                        steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))\r\n                    }\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {\r\n                                paymentSucceeded ? (\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Your order number is #{orderNumber}. We have not emailed your order\r\n                                        confirmation, and will not send you an update when your order has\r\n                                        shipped as this is a fake store!\r\n                                    </Typography>\r\n                                ) : (\r\n                                    <Button variant=\"contained\" onClick={handleBack}>\r\n                                        Go back and try again\r\n                                    </Button>\r\n                                )\r\n                            }\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                {\r\n                                    activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )\r\n                                }\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    )\r\n}","import { Elements } from \"@stripe/react-stripe-js\"\r\nimport { loadStripe } from \"@stripe/stripe-js\"\r\nimport { useEffect, useState } from \"react\"\r\nimport agent from \"../../app/api/agent\"\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\"\r\nimport { useAppDispatch } from \"../../app/store/configureStore\"\r\nimport { setBasket } from \"../basket/basketSlice\"\r\nimport CheckoutPage from \"./CheckoutPage\"\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51LJIs6CUHP3R02kbOI3W9jY5t8Eslm8NR58j7nKYDWndrt5s52hgwhZeOaYlkHJzVFvKMbHZ58dCoreFVL79S3e600l9Kb1qIP\")\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [dispatch])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading checkout...\" />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}","import { UploadFile } from \"@mui/icons-material\"\r\nimport { FormControl, FormHelperText, Typography } from \"@mui/material\"\r\nimport { useCallback } from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps { }\r\n\r\nexport default function AppDropzone(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: null })\r\n\r\n    const dzStyles = {\r\n        display: \"flex\",\r\n        border: \"dashed 3px #eee\",\r\n        borderColor: \"#eee\",\r\n        borderRadius: \"5px\",\r\n        paddingTop: \"30px\",\r\n        alignItems: \"center\",\r\n        height: 200,\r\n        width: 500,\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: \"green\",\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], { preview: URL.createObjectURL(acceptedFiles[0]) })\r\n        field.onChange(acceptedFiles[0])\r\n    }, [field])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <FormControl style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles} error={!!fieldState.error}>\r\n                <input {...getInputProps()} />\r\n                <UploadFile sx={{ fontSize: \"100px\" }} />\r\n                <Typography variant=\"h4\">Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\"\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: \"\" })\r\n\r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}\r\n            >\r\n                {\r\n                    props.items.map((item, index) => (\r\n                        <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","import * as yup from \"yup\"\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when(\"pictureUrl\", {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required(\"Please provide an image\"),\r\n    }),\r\n})","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\"\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\"\r\nimport AppDropzone from \"../../app/components/AppDropzone\"\r\nimport AppSelectList from \"../../app/components/AppSelectList\"\r\nimport AppTextInput from \"../../app/components/AppTextInput\"\r\nimport useProducts from \"../../app/hooks/useProducts\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { validationSchema } from \"./productValidation\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { useAppDispatch } from \"../../app/store/configureStore\"\r\nimport { setProduct } from \"../catalog/catalogSlice\"\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n    const { control, reset, handleSubmit, watch, formState: { isDirty, isSubmitting } } = useForm({\r\n        resolver: yupResolver(validationSchema) // <any>\r\n    })\r\n    const { brands, types } = useProducts()\r\n    const watchFile = watch(\"file\", null)\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile && !isDirty) reset(product)\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview)\r\n        }\r\n    }, [product, reset, watchFile, isDirty])\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product\r\n            if (product) {\r\n                response = await agent.Admin.updateProduct(data)\r\n            } else {\r\n                response = await agent.Admin.createProduct(data)\r\n            }\r\n            dispatch(setProduct(response))\r\n            cancelEdit()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box component={Paper} sx={{ p: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput control={control} name=\"name\" label=\"Product name\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={brands} name=\"brand\" label=\"Brand\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={types} name=\"type\" label=\"Type\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type=\"number\" control={control} name=\"price\" label=\"Price\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type=\"number\" control={control} name=\"quantityInStock\" label=\"Quantity in Stock\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput multiline={true} rows={4} control={control} name=\"description\" label=\"Description\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                            <AppDropzone control={control} name=\"file\" />\r\n                            {\r\n                                watchFile ? (\r\n                                    <img src={watchFile.preview} alt=\"preview\" style={{ maxHeight: 200 }} />\r\n                                ) : (\r\n                                    <img src={product?.pictureUrl} alt={product?.name} style={{ maxHeight: 200 }} />\r\n                                )\r\n                            }\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mt: 3 }}>\r\n                    <Button onClick={cancelEdit} variant=\"contained\" color=\"inherit\">Cancel</Button>\r\n                    <LoadingButton loading={isSubmitting} type=\"submit\" variant=\"contained\" color=\"success\">Submit</LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\"\r\nimport { Edit, Delete } from \"@mui/icons-material\"\r\nimport { currencyFormat } from \"../../app/util/util\"\r\nimport useProducts from \"../../app/hooks/useProducts\"\r\nimport AppPagination from \"../../app/components/AppPagination\"\r\nimport { useAppDispatch } from \"../../app/store/configureStore\"\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\"\r\nimport { useState } from \"react\"\r\nimport ProductForm from \"./ProductForm\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport agent from \"../../app/api/agent\"\r\nimport { LoadingButton } from \"@mui/lab\"\r\n\r\nexport default function Inventory() {\r\n    const { products, metaData } = useProducts()\r\n    const dispatch = useAppDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined)\r\n    const [loading, setLoading] = useState(false)\r\n    const [target, setTarget] = useState(0)\r\n\r\n    function handleSelectProduct(product: Product) {\r\n        setSelectedProduct(product)\r\n        setEditMode(true)\r\n    }\r\n\r\n    function handleDeleteProduct(id: number) {\r\n        setLoading(true)\r\n        setTarget(id)\r\n        agent.Admin.deleteProduct(id)\r\n            .then(() => dispatch(removeProduct(id)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (selectedProduct) setSelectedProduct(undefined)\r\n        setEditMode(false)\r\n    }\r\n\r\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n\r\n    return (\r\n        <>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography sx={{ p: 2 }} variant=\"h4\">Inventory</Typography>\r\n                <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size=\"large\" variant=\"contained\">Create</Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            products.map((product) => (\r\n                                <TableRow\r\n                                    key={product.id}\r\n                                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {product.id}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <Box display=\"flex\" alignItems=\"center\">\r\n                                            <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                            <span>{product.name}</span>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\r\n                                    <TableCell align=\"center\">{product.type}</TableCell>\r\n                                    <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                    <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\r\n                                        <LoadingButton\r\n                                            loading={loading && target === product.id}\r\n                                            startIcon={<Delete />} color=\"error\"\r\n                                            onClick={() => handleDeleteProduct(product.id)}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                metaData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n} ","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { Route, Switch } from \"react-router\"\nimport { ToastContainer } from \"react-toastify\"\nimport AboutPage from \"../../features/about/AboutPage\"\nimport Catalog from \"../../features/catalog/Catalog\"\nimport ProductDetails from \"../../features/catalog/ProductDetails\"\nimport ContactPage from \"../../features/contact/ContactPage\"\nimport HomePage from \"../../features/home/HomePage\"\nimport Header from \"./Header\"\nimport 'react-toastify/dist/ReactToastify.css'\nimport ServerError from \"../errors/ServerError\"\nimport NotFound from \"../errors/NotFound\"\nimport BasketPage from \"../../features/basket/BasketPage\"\nimport LoadingComponent from \"./LoadingComponent\"\nimport { useAppDispatch } from \"../store/configureStore\"\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\"\nimport Login from \"../../features/account/Login\"\nimport Register from \"../../features/account/Register\"\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport Orders from \"../../features/orders/Orders\"\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\"\nimport Inventory from \"../../features/admin/Inventory\"\n\n\nfunction App() {\n    const dispatch = useAppDispatch()\n    const [loading, setLoading] = useState(true)\n\n    const initApp = useCallback(async () => {\n        try {\n            await dispatch(fetchCurrentUser())\n            await dispatch(fetchBasketAsync())\n        } catch (error) {\n            console.log(error)\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        initApp().then(() => setLoading(false))\n    }, [initApp])\n\n    const [darkMode, setDarkMode] = useState(false)\n    const paletteType = darkMode ? 'dark' : 'light'\n    const theme = createTheme({\n        palette: {\n            mode: paletteType,\n            background: {\n                default: paletteType === 'light' ? '#eaeaea' : '#121212'\n            }\n        }\n    })\n\n    function handleThemeChange() {\n        setDarkMode(!darkMode)\n    }\n\n    if (loading) return <LoadingComponent message=\"Initializing app...\" />\n\n    return (\n        <ThemeProvider theme={theme}>\n            <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n            <CssBaseline />\n            <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n            <Route exact path='/' component={HomePage} />\n            <Route path={\"/(.+)\"} render={() => (\n                <Container sx={{ mt: 4 }}>\n                    <Switch>\n                        <Route exact path='/catalog' component={Catalog} />\n                        <Route path='/catalog/:id' component={ProductDetails} />\n                        <Route path='/about' component={AboutPage} />\n                        <Route path='/contact' component={ContactPage} />\n                        <Route path='/server-error' component={ServerError} />\n                        <Route path='/basket' component={BasketPage} />\n                        <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n                        <PrivateRoute path='/orders' component={Orders} />\n                        <PrivateRoute roles={[\"Admin\"]} path='/inventory' component={Inventory} />\n                        <Route path='/login' component={Login} />\n                        <Route path='/register' component={Register} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Container>\n            )} />\n        </ThemeProvider>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./app/layout/styles.css\"\nimport App from \"./app/layout/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { Router } from \"react-router-dom\"\nimport { createBrowserHistory } from \"history\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./app/store/configureStore\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={history}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()"],"sourceRoot":""}